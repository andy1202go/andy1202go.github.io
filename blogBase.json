{"singlePage": [], "startSite": "", "filingNum": "", "onePageListNum": 15, "commentLabelColor": "#006b75", "yearColorList": ["#bc4c00", "#0969da", "#1f883d", "#A333D0"], "i18n": "CN", "themeMode": "manual", "dayTheme": "light", "nightTheme": "dark", "urlMode": "pinyin", "script": "", "style": "", "head": "", "indexScript": "", "indexStyle": "", "bottomText": "", "showPostSource": 1, "iconList": {}, "UTC": 8, "rssSplit": "sentence", "exlink": {}, "needComment": 1, "allHead": "", "title": "Andy's Blog", "subTitle": "Tech Experience Learn Think", "avatarUrl": "https://avatars.githubusercontent.com/u/11980041", "GMEEK_VERSION": "last", "postListJson": {"P2": {"htmlDir": "docs/post/The Key To Accelerating Your Coding Skills--wen-zhang-du-hou-xiao-jie.html", "labels": ["\u8def\u5f84"], "postTitle": "The Key To Accelerating Your Coding Skills-\u6587\u7ae0\u8bfb\u540e\u5c0f\u7ed3", "postUrl": "post/The%20Key%20To%20Accelerating%20Your%20Coding%20Skills--wen-zhang-du-hou-xiao-jie.html", "postSourceUrl": "https://github.com/andy1202go/andy1202go.github.io/issues/2", "commentNum": 0, "wordCount": 19482, "description": "### \u6587\u7ae0\u94fe\u63a5\uff1ahttp://blog.thefirehoseproject.com/posts/learn-to-code-and-be-self-reliant/\r\n\r\n> \u5728\u7cfb\u7edf\u5730\u5b66\u4e60\u7f16\u7a0b\u6280\u80fd\u4e4b\u524d\uff0c\u6211\u5e0c\u671b\u4f60\u80fd\u5148\u770b\u4e00\u4e0b ' The Key To Accelerating Your Coding Skills'\uff0c \u8fd9\u7bc7\u6587\u7ae0\u4f1a\u544a\u8bc9\u4f60\u5982\u4f55\u6709\u6548\u5730\u5feb\u901f\u63d0\u9ad8\u81ea\u5df1\u7684\u7f16\u7a0b\u80fd\u529b\u3002", "top": 0, "createdAt": 1719457339, "style": "", "script": "", "head": "", "ogImage": "https://avatars.githubusercontent.com/u/11980041", "createdDate": "2024-06-27", "dateLabelColor": "#bc4c00"}, "P4": {"htmlDir": "docs/post/Linux-ru-men- Part1.html", "labels": ["\u5b66\u4e60\u603b\u7ed3"], "postTitle": "Linux\u5165\u95e8 Part1", "postUrl": "post/Linux-ru-men-%20Part1.html", "postSourceUrl": "https://github.com/andy1202go/andy1202go.github.io/issues/4", "commentNum": 0, "wordCount": 4249, "description": "\r\n> \u521d\u7ea7\u9636\u6bb5\uff1a\r\n> 1\uff0e \u547d\u4ee4\u662f\u5fc5\u987b\u8981\u5b66\u7684\uff0clinux\u5e38\u7528\u7684\u547d\u4ee4\u5927\u6982\u572880\u4e2a\u5de6\u53f3\uff0c\u8fd9\u4e9b\u5e38\u7528\u547d\u4ee4\u4e00\u5b9a\u8981\u719f\u7ec3\u638c\u63e1\u3002", "top": 0, "createdAt": 1719472353, "style": "", "script": "", "head": "", "ogImage": "https://avatars.githubusercontent.com/u/11980041", "createdDate": "2024-06-27", "dateLabelColor": "#bc4c00"}, "P5": {"htmlDir": "docs/post/Linux -ru-men- Part2.html", "labels": ["\u5b66\u4e60\u603b\u7ed3"], "postTitle": "Linux \u5165\u95e8 Part2", "postUrl": "post/Linux%20-ru-men-%20Part2.html", "postSourceUrl": "https://github.com/andy1202go/andy1202go.github.io/issues/5", "commentNum": 0, "wordCount": 9952, "description": "### 1.6 \u6587\u4ef6\u4e0e\u76ee\u5f55\u7ba1\u7406\r\n\r\n- \u7edd\u5bf9\u8def\u5f84\uff0c\u5c31\u662f\u4ece/\u6839\u76ee\u5f55\u5f00\u59cb\u7684\r\n- \u76f8\u5bf9\u8def\u5f84\uff0c\u76f8\u5bf9\u4e8e\u5f53\u524d\u6240\u5728\u7684\u76ee\u5f55\r\n\r\n#### \u5904\u7406\u76ee\u5f55\u7684\u5e38\u7528\u547d\u4ee4\r\n\r\n\u63a5\u4e0b\u6765\u6211\u4eec\u5c31\u6765\u770b\u51e0\u4e2a\u5e38\u89c1\u7684\u5904\u7406\u76ee\u5f55\u7684\u547d\u4ee4\u5427\uff1a\r\n\r\n- ls: \u5217\u51fa\u76ee\u5f55\r\n- cd\uff1a\u5207\u6362\u76ee\u5f55\r\n- pwd\uff1a\u663e\u793a\u76ee\u524d\u7684\u76ee\u5f55\r\n- mkdir\uff1a\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u76ee\u5f55\r\n- rmdir\uff1a\u5220\u9664\u4e00\u4e2a\u7a7a\u7684\u76ee\u5f55\r\n- cp: \u590d\u5236\u6587\u4ef6\u6216\u76ee\u5f55\r\n- rm: \u79fb\u9664\u6587\u4ef6\u6216\u76ee\u5f55\r\n- mv: \u79fb\u52a8\u6587\u4ef6\u4e0e\u76ee\u5f55\u3001\u6587\u4ef6\u91cd\u547d\u540d\r\n\r\n\u4f60\u53ef\u4ee5\u4f7f\u7528 *man [\u547d\u4ee4]* \u6765\u67e5\u770b\u5404\u4e2a\u547d\u4ee4\u7684\u4f7f\u7528\u6587\u6863\uff0c\u5982 \uff1aman cp\u3002", "top": 0, "createdAt": 1719472428, "style": "", "script": "", "head": "", "ogImage": "https://avatars.githubusercontent.com/u/11980041", "createdDate": "2024-06-27", "dateLabelColor": "#bc4c00"}, "P6": {"htmlDir": "docs/post/Linux -ru-men- Part3.html", "labels": ["\u5b66\u4e60\u603b\u7ed3"], "postTitle": "Linux \u5165\u95e8 Part3", "postUrl": "post/Linux%20-ru-men-%20Part3.html", "postSourceUrl": "https://github.com/andy1202go/andy1202go.github.io/issues/6", "commentNum": 0, "wordCount": 1406, "description": "## 2 Shell\u8bed\u8a00\u7684\u77e5\u8bc6\u5185\u5bb9\r\n\r\n\u7565\r\n\r\n## 3 Linux\u76f8\u5173\u7684\u53c2\u8003\u624b\u518c\r\n\r\n1. [[Linux \u547d\u4ee4\u5927\u5168](https://www.w3cschool.cn/linux/linux-command-manual.html)](https://www.w3cschool.cn/linux/linux-command-manual.html)\r\n2. [[Nginx \u5b89\u88c5\u914d\u7f6e](https://www.w3cschool.cn/linux/u5xv1rha.html)](https://www.w3cschool.cn/linux/u5xv1rha.html)\r\n3. [[MySQL \u5b89\u88c5\u914d\u7f6e](https://www.w3cschool.cn/linux/z29j1rhv.html)](https://www.w3cschool.cn/linux/z29j1rhv.html)\r\n4. [[linux\u5220\u9664\u6587\u4ef6\u5939\u547d\u4ee4\u4f7f\u7528\u65b9\u6cd5](https://www.w3cschool.cn/linux/linux-9yfc2oyy.html)](https://www.w3cschool.cn/linux/linux-9yfc2oyy.html)\r\n5. [[Linux\u5173\u673a\u547d\u4ee4\u548c\u91cd\u542f\u547d\u4ee4\u8bf4\u660e](https://www.w3cschool.cn/linux/linux-are12oz3.html)](https://www.w3cschool.cn/linux/linux-are12oz3.html)\r\n\r\n## \u53c2\u8003\u8d44\u6599\r\n\r\n[[Linux \u6559\u7a0b](https://www.w3cschool.cn/linux/)](https://www.w3cschool.cn/linux/)\r\n\r\n[[\u8c08\u8c08\u5982\u4f55\u5b66\u4e60Linux\u64cd\u4f5c\u7cfb\u7edf](http://ixdba.blog.51cto.com/2895551/569329/)](http://ixdba.blog.51cto.com/2895551/569329/)\r\n\r\n[[Linux\u5b98\u7f51](http://www.linux.org/)](http://www.linux.org/) \uff08\u6b64\u7f51\u7ad9\u7ecf\u5e38\u663e\u793a\u670d\u52a1\u5668\u9519\u8bef\uff09\r\n\r\n[[Linux\u4e0b\u8f7d](https://www.linux.org/pages/download/)](https://www.linux.org/pages/download/)\r\n\r\n[[Linux API\u6587\u6863](http://download.csdn.net/detail/a7320760/3617981)](http://download.csdn.net/detail/a7320760/3617981)\r\n\r\n[[Linux\u6559\u7a0b](https://www.w3cschool.cn/linux)](https://www.w3cschool.cn/linux)\r\n\r\n[[Linux\u89c6\u9891\u8bfe\u7a0b](https://www.w3cschool.cn/minicourse/play/linux_my)](https://www.w3cschool.cn/minicourse/play/linux_my)\r\n\r\n[[Linux\u95ee\u7b54](https://www.w3cschool.cn/topic/linux)](\u3002", "top": 0, "createdAt": 1719472463, "style": "", "script": "", "head": "", "ogImage": "https://avatars.githubusercontent.com/u/11980041", "createdDate": "2024-06-27", "dateLabelColor": "#bc4c00"}, "P7": {"htmlDir": "docs/post/Python-cai-niao-ru-men.html", "labels": ["\u5b66\u4e60\u603b\u7ed3"], "postTitle": "Python\u83dc\u9e1f\u5165\u95e8", "postUrl": "post/Python-cai-niao-ru-men.html", "postSourceUrl": "https://github.com/andy1202go/andy1202go.github.io/issues/7", "commentNum": 0, "wordCount": 7367, "description": "## [[Python3 \u6559\u7a0b | \u83dc\u9e1f\u6559\u7a0b](https://www.runoob.com/python/python-tutorial.html)](https://www.runoob.com/python/python-tutorial.html)\r\n\r\n**[[Python Tutor: Visualize code](https://pythontutor.com/visualize.html#mode=edit)](https://pythontutor.com/visualize.html#mode=edit)**\r\n\r\n### Python \u53d1\u5c55\u5386\u53f2\r\n\r\nPython \u662f\u7531 Guido van Rossum \u5728\u516b\u5341\u5e74\u4ee3\u672b\u548c\u4e5d\u5341\u5e74\u4ee3\u521d\uff0c\u5728\u8377\u5170\u56fd\u5bb6\u6570\u5b66\u548c\u8ba1\u7b97\u673a\u79d1\u5b66\u7814\u7a76\u6240\u8bbe\u8ba1\u51fa\u6765\u7684\u3002", "top": 0, "createdAt": 1719472613, "style": "", "script": "", "head": "", "ogImage": "https://avatars.githubusercontent.com/u/11980041", "createdDate": "2024-06-27", "dateLabelColor": "#bc4c00"}, "P8": {"htmlDir": "docs/post/ye-wu-xi-tong-yao-qiu-qian-yao-zong-jie.html", "labels": ["\u5de5\u4f5c\u603b\u7ed3"], "postTitle": "\u4e1a\u52a1\u7cfb\u7edf\u8981\u6c42\u6d45\u8981\u603b\u7ed3", "postUrl": "post/ye-wu-xi-tong-yao-qiu-qian-yao-zong-jie.html", "postSourceUrl": "https://github.com/andy1202go/andy1202go.github.io/issues/8", "commentNum": 0, "wordCount": 3057, "description": "# \u4e1a\u52a1\u7cfb\u7edf\u8981\u6c42\r\n\r\n\u4e00\u53e5\u8bdd\u76ee\u6807\uff1a\u5efa\u7acb\u597d\u8d1f\u8d23\u7684\u9879\u76ee\r\n\r\n\u9879\u76ee\u8981\u8fbe\u5230\r\n\r\n|              | \u6027\u80fd\u8981\u6c42  \u5f00\u53d1\u8981\u6c42    \u6548\u7387\u8981\u6c42  \u8d28\u91cf\u8981\u6c42 |\r\n| ------------ | ---------------------------------------- |\r\n| **\u5e94\u7528\u89c6\u89d2** | \u9ad8\u5e76\u53d1   \u5f00\u53d1\u901f\u5ea6\u5feb  \u5e76\u884c\u5f00\u53d1  \u9ad8\u53ef\u7528    |\r\n| **\u5e95\u5c42\u89c6\u89d2** | \u4e91\u539f\u751f    \u5206\u5e03\u5f0f      \u5fae\u670d\u52a1    k8s      |\r\n| **\u62bd\u8c61\u89c6\u89d2** | \u6d41\u91cf\u6cbb\u7406  \u670d\u52a1\u6cbb\u7406    \u8d44\u6e90\u6cbb\u7406  \u6570\u636e\u6cbb\u7406 |\r\n\r\n## \u5e94\u7528\u89c6\u89d2\r\n\r\n### \u9ad8\u5e76\u53d1\u7cfb\u7edf\r\n\r\n#### \u4ec0\u4e48\u662f\u9ad8\u5e76\u53d1\uff1f\r\n\r\n> \u9ad8\u5e76\u53d1\u662f\u6307\u7279\u5b9a\u7684\u7cfb\u7edf\u6216\u5e94\u7528\u7a0b\u5e8f\u53ef\u4ee5\u540c\u65f6\u5904\u7406\u5927\u91cf\u7684\u5e76\u53d1\u5904\u7406\u8bf7\u6c42\uff0c\u8981\u6c42\u5176\u80fd\u591f\u540c\u65f6\u5e94\u4ed8\u9ad8\u6d41\u91cf\u7684\u8bbf\u95ee\u3002", "top": 0, "createdAt": 1719472802, "style": "", "script": "", "head": "", "ogImage": "https://avatars.githubusercontent.com/u/11980041", "createdDate": "2024-06-27", "dateLabelColor": "#bc4c00"}, "P9": {"htmlDir": "docs/post/JavaScript(1) -ru-men- Part1.html", "labels": ["\u5b66\u4e60\u603b\u7ed3"], "postTitle": "JavaScript(1) \u5165\u95e8 Part1", "postUrl": "post/JavaScript%281%29%20-ru-men-%20Part1.html", "postSourceUrl": "https://github.com/andy1202go/andy1202go.github.io/issues/9", "commentNum": 0, "wordCount": 6807, "description": "> \u7b80\u5355\u5730\u8bf4\uff0cJavaScript\u662f\u4e00\u79cd\u8fd0\u884c\u5728\u6d4f\u89c8\u5668\u4e2d\u7684\u89e3\u91ca\u578b\u7684\u7f16\u7a0b\u8bed\u8a00\u3002", "top": 0, "createdAt": 1719473043, "style": "", "script": "", "head": "", "ogImage": "https://avatars.githubusercontent.com/u/11980041", "createdDate": "2024-06-27", "dateLabelColor": "#bc4c00"}, "P10": {"htmlDir": "docs/post/JavaScript(2) -ru-men- Part2.html", "labels": ["\u5b66\u4e60\u603b\u7ed3"], "postTitle": "JavaScript(2) \u5165\u95e8 Part2", "postUrl": "post/JavaScript%282%29%20-ru-men-%20Part2.html", "postSourceUrl": "https://github.com/andy1202go/andy1202go.github.io/issues/10", "commentNum": 0, "wordCount": 5820, "description": "## 6 \u5bf9\u8c61\r\n\r\n- \u8bbf\u95ee\u5c5e\u6027\u662f\u901a\u8fc7`.`\u64cd\u4f5c\u7b26\u5b8c\u6210\u7684\uff0c\u4f46\u8fd9\u8981\u6c42\u5c5e\u6027\u540d\u5fc5\u987b\u662f\u4e00\u4e2a\u6709\u6548\u7684\u53d8\u91cf\u540d\u3002", "top": 0, "createdAt": 1719473086, "style": "", "script": "", "head": "", "ogImage": "https://avatars.githubusercontent.com/u/11980041", "createdDate": "2024-06-27", "dateLabelColor": "#bc4c00"}, "P11": {"htmlDir": "docs/post/JavaScript(3) -han-shu- Part1.html", "labels": ["\u5b66\u4e60\u603b\u7ed3"], "postTitle": "JavaScript(3) \u51fd\u6570 Part1", "postUrl": "post/JavaScript%283%29%20-han-shu-%20Part1.html", "postSourceUrl": "https://github.com/andy1202go/andy1202go.github.io/issues/11", "commentNum": 0, "wordCount": 8627, "description": "## 1 \u51fd\u6570\u5b9a\u4e49\u548c\u8c03\u7528\r\n\r\n\u5e38\u89c4\u5b9a\u4e49\uff1a\r\n\r\n```javascript\r\nfunction abs(x){\r\n    ...\r\n}\r\n```\r\n\r\n- function\u6307\u51fa\u8fd9\u662f\u4e00\u4e2a\u51fd\u6570\u5b9a\u4e49\r\n- abs\u662f\u51fd\u6570\u540d\r\n- (x)\u5185\u662f\u51fd\u6570\u7684\u53c2\u6570\uff0c\u591a\u4e2a\u4ee5\u9017\u53f7\u5206\u9694\r\n- {}\u662f\u51fd\u6570\u4f53\r\n\r\n\u9700\u8981\u6ce8\u610f\uff1a\r\n\r\n- \u4e00\u65e6\u6267\u884c\u5230return\u5c31\u7ed3\u675f\u51fd\u6570\r\n- \u5982\u679c\u6ca1\u6709return\uff0c\u4f1a\u8fd4\u56deundefined\r\n\r\n\u7531\u4e8eJavaScript\u7684\u51fd\u6570\u4e5f\u662f\u4e00\u4e2a\u5bf9\u8c61\uff0c\u6240\u4ee5\u6709\u53e6\u4e00\u79cd\u51fd\u6570\u5b9a\u4e49\u65b9\u6cd5\r\n\r\n```javascript\r\nvar abs = function(x){\r\n    ...\r\n};\r\n```\r\n\r\n\u9700\u8981\u6ce8\u610f\uff1a\r\n\r\n- \u8fd9\u79cd\u65b9\u5f0f\u8981\u6709\u5206\u53f7\u7ed3\u5c3e\r\n- \u4f7f\u7528\u4e0a\u5b8c\u5168\u76f8\u540c\r\n\r\n\u53e6\u5916\uff0cJavaScript\u5bf9\u51fd\u6570\u5165\u53c2\u6bd4\u8f83\u968f\u610f\uff0c\u9700\u8981\u683c\u5916\u6ce8\u610f\r\n\r\n```javascript\r\nabs(10, 'blablabla'); // \u591a\u4e2a\u53c2\u6570\uff0c\u53ea\u7528\u4e86\u7b2c\u4e00\u4e2a\uff1b\u8fd4\u56de10\r\nabs(-9, 'haha', 'hehe', null); // \u8fd4\u56de9\r\nabs(); // \u8fd4\u56deNaN\r\n\r\n//\u6539\u826f\r\nfunction abs(x) {\r\n    if (typeof x !== 'number') {\r\n        throw 'Not a number';\r\n    }\r\n    if (x >= 0) {\r\n        return x;\r\n    } else {\r\n        return -x;\r\n    }\r\n}\r\n```\r\n\r\n### arguments\r\n\r\n> JavaScript\u8fd8\u6709\u4e00\u4e2a\u514d\u8d39\u8d60\u9001\u7684\u5173\u952e\u5b57`arguments`\uff0c\u5b83\u53ea\u5728\u51fd\u6570\u5185\u90e8\u8d77\u4f5c\u7528\uff0c\u5e76\u4e14\u6c38\u8fdc\u6307\u5411\u5f53\u524d\u51fd\u6570\u7684\u8c03\u7528\u8005\u4f20\u5165\u7684\u6240\u6709\u53c2\u6570\u3002", "top": 0, "createdAt": 1719473256, "style": "", "script": "", "head": "", "ogImage": "https://avatars.githubusercontent.com/u/11980041", "createdDate": "2024-06-27", "dateLabelColor": "#bc4c00"}, "P12": {"htmlDir": "docs/post/JavaScript(4) -han-shu- Part2.html", "labels": ["\u5b66\u4e60\u603b\u7ed3"], "postTitle": "JavaScript(4) \u51fd\u6570 Part2", "postUrl": "post/JavaScript%284%29%20-han-shu-%20Part2.html", "postSourceUrl": "https://github.com/andy1202go/andy1202go.github.io/issues/12", "commentNum": 0, "wordCount": 7166, "description": "## 3 \u65b9\u6cd5\r\n\r\n\u5728\u4e00\u4e2a\u5bf9\u8c61\u4e2d\u7ed1\u5b9a\u51fd\u6570\uff0c\u662f\u8fd9\u4e2a\u5bf9\u8c61\u7684\u65b9\u6cd5\uff0c\u4e3e\u4f8b\r\n\r\n```javascript\r\nvar xiaoming = {\r\n    name: '\u5c0f\u660e',\r\n    birth: 1990,\r\n    age: function () {\r\n        var y = new Date().getFullYear();\r\n        return y - this.birth;\r\n    }\r\n};\r\n\r\nxiaoming.age; // function xiaoming.age()\r\nxiaoming.age(); // \u4eca\u5e74\u8c03\u7528\u662f25,\u660e\u5e74\u8c03\u7528\u5c31\u53d8\u621026\u4e86\r\n```\r\n\r\n#### this\u548cthat\r\n\r\n- \u65b9\u6cd5\u4e2d\u7684this\u6307\u5f53\u524d\u5bf9\u8c61\r\n\r\n- \u5f53\u65b9\u6cd5\u4e2d\u5d4c\u5957\u51fd\u6570\u7684\u65f6\u5019\uff0c\u518d\u4f7f\u7528this\u4f1a\u6709\u610f\u60f3\u4e0d\u5230\u7684\u7ed3\u679c...\u6b64\u65f6\u7684this\u53ef\u80fd\u6307\u5411\u5168\u5c40\u5bf9\u8c61window\uff0c\u6216\u8005undefined\r\n\r\n- \u4fee\u590d\u65b9\u6cd5\u662f\u4f7f\u7528\u4e00\u4e2athat\u5728\u51fd\u6570\u4e00\u5f00\u59cb\u5c31\u6355\u83b7this\uff0c\u540e\u7eed\u90fd\u4f7f\u7528that\uff0c\u5229\u7528\u5d4c\u5957\u51fd\u6570\u53d8\u91cf\u4f5c\u7528\u57df\r\n\r\n  ```javascript\r\n  'use strict';\r\n  \r\n  var xiaoming = {\r\n      name: '\u5c0f\u660e',\r\n      birth: 1990,\r\n      age: function () {\r\n          var that = this; // \u5728\u65b9\u6cd5\u5185\u90e8\u4e00\u5f00\u59cb\u5c31\u6355\u83b7this\r\n          function getAgeFromBirth() {\r\n              var y = new Date().getFullYear();\r\n              return y - that.birth; // \u7528that\u800c\u4e0d\u662fthis\r\n          }\r\n          return getAgeFromBirth();\r\n      }\r\n  };\r\n  \r\n  xiaoming.age(); // 25\r\n  ```\r\n\r\n#### apply\r\n\r\n\u51fd\u6570\u672c\u8eab\u90fd\u5177\u6709apply\u65b9\u6cd5\u3002", "top": 0, "createdAt": 1719473318, "style": "", "script": "", "head": "", "ogImage": "https://avatars.githubusercontent.com/u/11980041", "createdDate": "2024-06-27", "dateLabelColor": "#bc4c00"}, "P13": {"htmlDir": "docs/post/JavaScript(5) -han-shu- Part3.html", "labels": ["\u5b66\u4e60\u603b\u7ed3"], "postTitle": "JavaScript(5) \u51fd\u6570 Part3", "postUrl": "post/JavaScript%285%29%20-han-shu-%20Part3.html", "postSourceUrl": "https://github.com/andy1202go/andy1202go.github.io/issues/13", "commentNum": 0, "wordCount": 6536, "description": "## 5 \u95ed\u5305\r\n\r\n\u9ad8\u9636\u51fd\u6570\u9664\u4e86\u53ef\u4ee5\u63a5\u53d7\u51fd\u6570\u4f5c\u4e3a\u53c2\u6570\u5916\uff0c\u8fd8\u53ef\u4ee5\u628a\u51fd\u6570\u4f5c\u4e3a\u7ed3\u679c\u8fd4\u56de\u3002", "top": 0, "createdAt": 1719473368, "style": "", "script": "", "head": "", "ogImage": "https://avatars.githubusercontent.com/u/11980041", "createdDate": "2024-06-27", "dateLabelColor": "#bc4c00"}, "P14": {"htmlDir": "docs/post/JavaScript(6) -biao-zhun-dui-xiang.html", "labels": ["\u5b66\u4e60\u603b\u7ed3"], "postTitle": "JavaScript(6) \u6807\u51c6\u5bf9\u8c61", "postUrl": "post/JavaScript%286%29%20-biao-zhun-dui-xiang.html", "postSourceUrl": "https://github.com/andy1202go/andy1202go.github.io/issues/14", "commentNum": 0, "wordCount": 10019, "description": "\u5728JavaScript\u7684\u4e16\u754c\u91cc\uff0c\u4e00\u5207\u90fd\u662f\u5bf9\u8c61\u3002", "top": 0, "createdAt": 1719473529, "style": "", "script": "", "head": "", "ogImage": "https://avatars.githubusercontent.com/u/11980041", "createdDate": "2024-06-27", "dateLabelColor": "#bc4c00"}, "P15": {"htmlDir": "docs/post/JavaScript(7) -mian-xiang-dui-xiang-bian-cheng.html", "labels": ["\u5b66\u4e60\u603b\u7ed3"], "postTitle": "JavaScript(7) \u9762\u5411\u5bf9\u8c61\u7f16\u7a0b", "postUrl": "post/JavaScript%287%29%20-mian-xiang-dui-xiang-bian-cheng.html", "postSourceUrl": "https://github.com/andy1202go/andy1202go.github.io/issues/15", "commentNum": 0, "wordCount": 7204, "description": "JavaScript\u867d\u7136\u6240\u6709\u6570\u636e\u90fd\u662f\u5bf9\u8c61\uff0c\u4f46\u4e0d\u662f\u5c31\u80fd\u539f\u751f\u5b9e\u73b0\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u7684\u3002", "top": 0, "createdAt": 1719473611, "style": "", "script": "", "head": "", "ogImage": "https://avatars.githubusercontent.com/u/11980041", "createdDate": "2024-06-27", "dateLabelColor": "#bc4c00"}, "P16": {"htmlDir": "docs/post/JavaScript(8) -liu-lan-qi.html", "labels": ["\u5b66\u4e60\u603b\u7ed3"], "postTitle": "JavaScript(8) \u6d4f\u89c8\u5668", "postUrl": "post/JavaScript%288%29%20-liu-lan-qi.html", "postSourceUrl": "https://github.com/andy1202go/andy1202go.github.io/issues/16", "commentNum": 0, "wordCount": 11250, "description": "JavaScript\u7684\u51fa\u73b0\u5c31\u662f\u4e3a\u4e86\u80fd\u5728\u6d4f\u89c8\u5668\u4e2d\u8fd0\u884c\u3002", "top": 0, "createdAt": 1719473711, "style": "", "script": "", "head": "", "ogImage": "https://avatars.githubusercontent.com/u/11980041", "createdDate": "2024-06-27", "dateLabelColor": "#bc4c00"}, "P17": {"htmlDir": "docs/post/EffectiveJava(1) -chuang-jian-he-xiao-hui-dui-xiang- Part1.html", "labels": ["\u5b66\u4e60\u603b\u7ed3"], "postTitle": "EffectiveJava(1) \u521b\u5efa\u548c\u9500\u6bc1\u5bf9\u8c61 Part1", "postUrl": "post/EffectiveJava%281%29%20-chuang-jian-he-xiao-hui-dui-xiang-%20Part1.html", "postSourceUrl": "https://github.com/andy1202go/andy1202go.github.io/issues/17", "commentNum": 0, "wordCount": 10415, "description": "## 1 \u8003\u8651\u4f7f\u7528\u9759\u6001\u5de5\u5382\u65b9\u6cd5\u66ff\u4ee3\u6784\u9020\u65b9\u6cd5\r\n\r\n\u9759\u6001\u5de5\u5382\u65b9\u6cd5\uff0c\u6307\u7684\u662f\u7c7b\u4e2d\u7684\u9759\u6001\u65b9\u6cd5\uff0c\u7528\u4e8e\u521b\u5efa\u7c7b\u7684\u5de5\u5382\u65b9\u6cd5\uff1b\r\n\r\n\u548c\u8bbe\u8ba1\u6a21\u5f0f\u4e2d\u7684\u5de5\u5382\u65b9\u6cd5\u4e3b\u8981\u533a\u522b\u5728\u4e8e\r\n\r\n- \u9759\u6001\u5de5\u5382\u65b9\u6cd5\u521b\u5efa\u7684\u662f\u540c\u4e00\u4e2a\u5b9e\u4f8b\uff0c\u6bd4\u5982Boolean.of()\uff0c\u8fd4\u56de\u7684\u662fTRUE\u548cFALSE\u4e24\u4e2a\u5b9e\u4f8b\u4e2d\u7684\u4e00\u4e2a\uff0c\u6ca1\u6709\u66f4\u591a\u7684\r\n- \u5de5\u5382\u65b9\u6cd5\uff0c\u6c38\u8fdc\u662fnew\u4e00\u4e2a\r\n\r\n\u5148\u770b\u4e0bBoolean\u7684\u9759\u6001\u5de5\u5382\u65b9\u6cd5\u5b9e\u4f8b\u5427\r\n\r\n```java\r\npublic final class Boolean implements java.io.Serializable,\r\n                                      Comparable<Boolean>\r\n{\r\n    /**\r\n     * The {@code Boolean} object corresponding to the primitive\r\n     * value {@code true}.\r\n     */\r\n    public static final Boolean TRUE = new Boolean(true);\r\n\r\n    /**\r\n     * The {@code Boolean} object corresponding to the primitive\r\n     * value {@code false}.\r\n     */\r\n    public static final Boolean FALSE = new Boolean(false);\r\n                                   \r\n    public static Boolean valueOf(String s) {\r\n        return parseBoolean(s) ? TRUE : FALSE;\r\n    }                                      \r\n  }\r\n```\r\n\r\n\u5de5\u5382\u65b9\u6cd5\u7684\u7b80\u5355\u5de5\u5382\uff0c\u62bd\u8c61\u5de5\u5382\u5c31\u4e0d\u5199\u4e86\uff1b\u4f46\u662f\u9759\u6001\u5de5\u5382\u65b9\u6cd5\u548c\u9759\u6001\u5355\u4f8b\u6a21\u5f0f\u8fd8\u662f\u633a\u50cf\u7684\uff0c\u6bd4\u5982\r\n\r\n```java\r\npublic class Singleton{\r\n    //lazy\r\n    private static Singleton instance = null;\r\n    \r\n    //private\u9632\u6b62\u76f4\u63a5\u6784\u9020\r\n    private Singleton(){}\r\n    \r\n    public static Singleton getInstance(){\r\n        if(instance == null){\r\n            synchronized (Singleton.class) {\r\n                if (instance == null) {\r\n                    instance = new Singleton();\r\n                }\r\n            }\r\n        }\r\n        return instance;\r\n    }\r\n}\r\n```\r\n\r\n\u9759\u6001\u5de5\u5382\u65b9\u6cd5\u7684\u4f18\u70b9\r\n\r\n- \u53ef\u8bfb\u6027\u66f4\u597d\uff1a\u6709\u540d\u5b57\uff0c\u53ef\u4ee5\u76f4\u63a5\u8868\u793a\u542b\u4e49\uff0c\u6bd4\u5982Collections.emptyList()\r\n- \u4e0e\u6784\u9020\u65b9\u6cd5\u4e0d\u540c\uff0c\u5b83\u4eec\u4e0d\u9700\u8981\u6bcf\u6b21\u8c03\u7528\u65f6\u90fd\u521b\u5efa\u4e00\u4e2a\u65b0\u5bf9\u8c61\r\n- \u53ef\u4ee5\u8fd4\u56de\u8be5\u7c7b\u7684\u4efb\u610f\u5b50\u7c7b\uff1a\u6bd4\u5982Collections.unmodifiableList();\r\n- \u9759\u6001\u5de5\u5382\u7684\u7b2c\u56db\u4e2a\u4f18\u70b9\u662f\u8fd4\u56de\u5bf9\u8c61\u7684\u7c7b\u53ef\u4ee5\u6839\u636e\u8f93\u5165\u53c2\u6570\u7684\u4e0d\u540c\u800c\u4e0d\u540c\r\n- \u9759\u6001\u5de5\u5382\u7684\u7b2c\u4e94\u4e2a\u4f18\u70b9\u662f\uff0c\u5728\u7f16\u5199\u5305\u542b\u8be5\u65b9\u6cd5\u7684\u7c7b\u65f6\uff0c\u8fd4\u56de\u7684\u5bf9\u8c61\u7684\u7c7b\u4e0d\u9700\u8981\u5b58\u5728\r\n\r\n\u7f3a\u70b9\r\n\r\n- \u540d\u5b57\u7528\u4e8e\u8868\u793a\u542b\u4e49\u4e86\uff0c\u6ca1\u6709\u6807\u8bc6\u662f\u5b9e\u4f8b\u5316\u7684\u65b9\u6cd5\uff1a\u6240\u4ee5\u7528getInstance\uff0cnewInstance\u4ec0\u4e48\u7684\u547d\u540d\uff0c\u4fdd\u7559\u81f3\u5c11\u4e00\u4e2a\r\n- \u5982\u679c\u7c7b\u4e0d\u542bpublic\u6216protect\u7684\u6784\u9020\u65b9\u6cd5\uff0c\u5c06\u4e0d\u80fd\u88ab\u7ee7\u627f\uff1a\u8fd9\u4e5f\u662f\u5355\u4f8b\u6a21\u5f0f\u7684\u95ee\u9898\uff0c\u5206\u9700\u8981\u4f7f\u7528\u7684\u60c5\u51b5\u6765\u51b3\u5b9a\u5427\r\n\r\n\u7efc\u4e0a\uff0c\u7ed9\u51fa\u4e24\u79cd\u8f83\u597d\u7684\u5b9e\u73b0\uff1a\u4e00\u79cd\u662f\u5355\u4f8b\u6a21\u5f0f\uff0c\u7ebf\u7a0b\u5b89\u5168\u7684\u9759\u6001\u65b9\u6cd5\uff1b\u4e00\u79cd\u5982\u4e0b\r\n\r\n```java\r\npublic class RandomIntGenerator {\r\n    /**\r\n     * \u6700\u5c0f\u503c\r\n     */\r\n    private int min = Integer.MIN_VALUE;\r\n    /**\r\n     * \u6700\u5927\u503c\r\n     */\r\n    private int max = Integer.MAX_VALUE;\r\n\r\n    /**\r\n     * \u5927\u4e8emin \u5c0f\u4e8emax\r\n     * @param min\r\n     * @param max\r\n     */\r\n    public RandomIntGenerator(int min, int max)\r\n    {\r\n        this.min = min;\r\n        this.max = max;\r\n    }\r\n    \r\n    /**\r\n     * \u5927\u4e8emin \u5c0f\u4e8emax\r\n     * @param min\r\n     * @param max\r\n     */\r\n    public static RandomIntGenerator between(int min, int max)\r\n    {\r\n        return new RandomIntGenerator(min, max);\r\n    }\r\n    /**\r\n     * \u5927\u4e8emin \u5c0f\u4e8eInteger.MAX_VALUE\r\n     */\r\n    public static RandomIntGenerator biggerThan(int min)\r\n    {\r\n        return new RandomIntGenerator(min, Integer.MAX_VALUE);\r\n    }\r\n\r\n    /**\r\n     * \u5927\u4e8eInteger.MIN_VALUE \u5c0f\u4e8emax\r\n     */\r\n    public static RandomIntGenerator smallerThan(int max)\r\n    {\r\n        return new RandomIntGenerator(Integer.MIN_VALUE, max);\r\n    }\r\n\r\n    public static RandomIntGenerator getInstance(){\r\n        return new RandomIntGenerator(Integer.MIN_VALUE, Integer.MAX_VALUE);\r\n    }\r\n}\r\n```\r\n\r\n### \u4f7f\u7528\u4f53\u9a8c\r\n\r\n- \u611f\u89c9\u66f4\u591a\u7684\u662f\u5de5\u5177\u7c7b\u53ef\u4ee5\u8fd9\u4e48\u53bb\u5b9a\u4e49\uff0c\u6bd5\u7adf\u90fd\u662f\u5355\u4f8b\r\n- spring\u672c\u8eab\u90fd\u662f\u5355\u4f8b\u4e86\uff0c\u5176\u5b9e\u4e5f\u4e0d\u9700\u8981\u5355\u72ec\u8fd9\u4e2a\u4e86\r\n\r\n## 2 \u5f53\u6784\u9020\u65b9\u6cd5\u53c2\u6570\u8fc7\u591a\u65f6\u4f7f\u7528builder\u6a21\u5f0f\r\n\r\n\u6784\u9020\u65b9\u6cd5\u6bd4\u8f83\u591a\u7684\u65f6\u5019\uff0c\u6bd4\u8f83\u51e0\u79cd\u6784\u9020\u8bbe\u8ba1\r\n\r\n- \u4f38\u7f29\u6784\u9020\u65b9\u6cd5\uff1a\u5c31\u662f\u6784\u9020\u65b9\u6cd5\u4e2d\u5f3a\u884c\u585e\u53c2\u6570\r\n- JavaBeans\uff1a\u5c31\u662f\u5c5e\u6027\u90fd\u662fprivate\uff0c\u901a\u8fc7setter\u6765\u6784\u9020\r\n- Builder\u6a21\u5f0f\r\n\r\n\u4f7f\u7528Builder\u6a21\u5f0f\u7684\u4f18\u52bf\r\n\r\n- \u53ef\u8bfb\u6027\u597d\r\n- \u66f4\u5b89\u5168\uff08\u76f8\u6bd4\u4e8eJavaBeans\uff0c\u56e0\u4e3aJavaBeans\u7684\u6784\u9020\u65b9\u6cd5\u88ab\u5272\u88c2\u4e3a\u4e86\u591a\u6b21\u8c03\u7528\uff0c\u53ef\u80fd\u5bfc\u81f4\u5b9e\u4f8b\u4e0d\u4e00\u81f4\uff09\r\n- \u53ef\u4ee5\u6709\u591a\u4e2a\u53ef\u53d8\u53c2\u6570\uff0c\u5176\u5b9e\u5c31\u662f\u9012\u5f52\u4f7f\u7528builder\u7684\u67d0\u4e2a\u65b9\u6cd5\uff0c\u5fae\u5c0f\u4f18\u52bf\uff0c\u4e0d\u5e38\u7528\r\n\r\n\u7f3a\u70b9\uff1a\r\n\r\n- \u4ee3\u7801\u5197\u957f\uff0c\u56e0\u4e3a\u8981\u5355\u72ec\u5199builder\r\n\r\n\u7efc\u5408\u8003\u8651\r\n\r\n- \u53c2\u6570\u5927\u4e8e\u7b49\u4e8e4\u4e2a\u7684\u65f6\u5019\uff0c\u6700\u597d\u4f7f\u7528builder\u6a21\u5f0f\r\n- \u6ce8\u610f\uff1a\u9700\u8981\u4f30\u8ba1\u7c7b\u7684\u53c2\u6570\u6570\u91cf\uff0c\u5728\u4e00\u5f00\u59cb\u7684\u65f6\u5019\uff0c\u800c\u4e0d\u662f\u4ece\u4e00\u79cd\u6784\u9020\u65b9\u6cd5\u5207\u6362\u5230builder\u6a21\u5f0f\uff0c\u4ee3\u4ef7\u8f83\u5927\r\n\r\n\u6700\u4f73\u5b9e\u8df51\r\n\r\n- \u4f7f\u7528Lombok\u7684@Builder\r\n\r\n  ```java\r\n  import lombok.Builder;\r\n  \r\n  @Builder\r\n  public class SingletonBuilder {\r\n      private String param1;\r\n      private String param2;\r\n      private String param3;\r\n      private String param4;\r\n  }\r\n  ```\r\n\r\n- \u624b\u5199Builder\r\n\r\n  ```java\r\n  // Builder Pattern\r\n  public class NutritionFacts {\r\n      private final int servingSize;\r\n      private final int servings;\r\n      private final int calories;\r\n      private final int fat;\r\n      private final int sodium;\r\n      private final int carbohydrate;\r\n      public static class Builder {\r\n          // Required parameters\r\n          private final int servingSize;\r\n          private final int servings;\r\n          // Optional parameters - initialized to default values\r\n          private int calories      = 0;\r\n          private int fat           = 0;\r\n          private int sodium        = 0;\r\n          private int carbohydrate  = 0;\r\n          public Builder(int servingSize, int servings) {\r\n              this.servingSize = servingSize;\r\n              this.servings    = servings;\r\n          }\r\n          public Builder calories(int val) { \r\n              calories = val;      \r\n          }\r\n          public Builder fat(int val) { \r\n             fat = val;           \r\n             return this;\r\n          }\r\n          public Builder sodium(int val) { \r\n             sodium = val;        \r\n             return this; \r\n          }\r\n          public Builder carbohydrate(int val) { \r\n             carbohydrate = val;  \r\n             return this; \r\n          }\r\n          public NutritionFacts build() {\r\n              return new NutritionFacts(this);\r\n          }\r\n      }\r\n      private NutritionFacts(Builder builder) {\r\n          servingSize  = builder.servingSize;\r\n          servings     = builder.servings;\r\n          calories     = builder.calories;\r\n          fat          = builder.fat;\r\n          sodium       = builder.sodium;\r\n          carbohydrate = builder.carbohydrate;\r\n      }\r\n  }\r\n  ```\r\n\r\n- \u62bd\u8c61\u57fa\u7c7b\u4f7f\u7528Builder\u5b9e\u73b0\u53ef\u53d8\u53c2\u6570\u6784\u9020\r\n\r\n  ```java\r\n  public abstract class Pizza {\r\n      public enum Topping {HAM,MUSHROOM,ONION,PEPPER,SAUSAGE}\r\n      final Set<Topping> toppings;\r\n  \r\n      abstract static class Builder<T extends Builder<T>> {\r\n          EnumSet<Topping> toppings = EnumSet.noneOf(Topping.class);\r\n          public T addTopping(Topping topping){\r\n              toppings.add(Objects.requireNonNull(topping));\r\n              return self();//\u6a21\u62df\u7684self\u7c7b\u578b\r\n          }\r\n          abstract Pizza build();\r\n  \r\n          // Subclasses must override this method to return 'this'\r\n          protected abstract T self();\r\n      }\r\n  \r\n      Pizza(Builder<?> builder) {\r\n          toppings = builder.toppings.clone();\r\n      }\r\n  }\r\n  ```\r\n\r\n### \u4f7f\u7528\u4f53\u9a8c\r\n\r\n## 3 \u4f7f\u7528\u79c1\u6709\u6784\u9020\u65b9\u6cd5\u6216\u679a\u4e3e\u5b9e\u73b0\u5355\u4f8b\u6a21\u5f0f\r\n\r\n\u8ba8\u8bba\u4e863\u79cd\u5b9e\u73b0\u5355\u4f8b\u6a21\u5f0f\u7684\u4f18\u52a3\uff0c\u5206\u522b\u662f\r\n\r\n- \u79c1\u6709\u6784\u9020\u65b9\u6cd5+\u516c\u5f00\u7684\u5b9e\u4f8b\uff1b\r\n\r\n  ```java\r\n  public class Singleton{\r\n      private Singleton(){}\r\n      public static final Singleton INSTANCE = new Singleton();\r\n  }\r\n  ```\r\n\r\n- \u79c1\u6709\u6784\u9020\u65b9\u6cd5+\u79c1\u6709\u7684\u5b9e\u4f8b+\u516c\u5f00\u7684\u9759\u6001\u65b9\u6cd5\u83b7\u53d6\u5b9e\u4f8b\r\n\r\n  ```java\r\n  public class Singleton{\r\n      private Singleton(){}\r\n      private static final Singleton INSTANCE = new Singleton();\r\n      public static Singleton getInstance(){\r\n          return INSTANCE;\r\n      }\r\n  }\r\n  ```\r\n\r\n- \u679a\u4e3e\r\n\r\n  ```java\r\n  public enum Singleton {\r\n      INSTANCE;\r\n  }\r\n  ```\r\n\r\n\u4e66\u4e2d\u6700\u503e\u5411\u4f7f\u7528\u679a\u4e3e\u6765\u5b9e\u73b0\u5355\u4f8b\uff0c\u539f\u56e0\u5982\u4e0b\uff1a\r\n\r\n- \u6700\u7b80\u6d01\r\n\r\n- \u65e0\u507f\u5730\u63d0\u4f9b\u4e86\u5e8f\u5217\u5316\u673a\u5236\uff08\u8fd8\u4e0d\u600e\u4e48\u7406\u89e3..https://www.jianshu.com/p/d3d797c3cd45\uff09\r\n\r\n  > \u7edd\u5bf9\u9632\u6b62\u591a\u6b21\u5b9e\u4f8b\u5316\uff0c\u5373\u4f7f\u662f\u5728\u9762\u5bf9\u590d\u6742\u7684\u5e8f\u5217\u5316\u6216\u8005\u53cd\u5c04\u653b\u51fb\u7684\u65f6\u5019\r\n\r\n\u5176\u6b21\u662f\u9759\u6001\u5de5\u5382\u7684\u6a21\u5f0f\uff0c\u4f18\u70b9\u5728\u4e8e\r\n\r\n- \u901a\u8fc7API\u8868\u793a\u8fd9\u662f\u5355\u4f8b\u6a21\u5f0f\r\n- \u7075\u6d3b\r\n  - \u9700\u8981\u6539\u53d8\u4e3a\u6bcf\u4e2a\u8c03\u7528\u8be5\u65b9\u6cd5\u7684\u7ebf\u7a0b\u8fd4\u56de\u4e00\u4e2a\u552f\u4e00\u7684\u5b9e\u4f8b\uff0c\u76f4\u63a5\u5728\u9759\u6001\u5de5\u5382\u65b9\u6cd5\u4e2d new instance()\uff0c\u4f46\u6b64\u65f6\u9700\u8981\u53bb\u6389\u5355\u4f8b\u5bf9\u8c61\u4e2dfinal\u4fee\u9970\u7684\u5173\u952e\u5b57\r\n  - \u5982\u679c\u5e94\u7528\u7a0b\u5e8f\u9700\u8981\u4ed6\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u5b83\u6539\u4e3a\u4e00\u4e2a\u6cdb\u578b\u5355\u4f8b\u5de5\u5382\uff08\u6761\u76ee30\uff09\r\n\r\n\u7f3a\u70b9\u5728\u4e8e\uff0c\u5c0f\u5fc3\u5e8f\u5217\u5316\u95ee\u9898\uff08\u7b2c11\u7ae0\u6709\u8ba8\u8bba\uff09\r\n\r\n> \u4e3a\u4e86\u9632\u6b62\u5355\u4f8b\u7c7b\u53d8\u6210\u53ef\u5e8f\u5217\u5316\u7684\uff0c\u4ec5\u4ec5\u5c06\u6dfb\u52a0 *implements Serializable* \u5230\u58f0\u660e\u4e2d\u662f\u4e0d\u591f\u7684\u3002", "top": 0, "createdAt": 1719473864, "style": "", "script": "", "head": "", "ogImage": "https://avatars.githubusercontent.com/u/11980041", "createdDate": "2024-06-27", "dateLabelColor": "#bc4c00"}, "P18": {"htmlDir": "docs/post/EffectiveJava(2) -chuang-jian-he-xiao-hui-dui-xiang- Part2.html", "labels": ["\u5b66\u4e60\u603b\u7ed3"], "postTitle": "EffectiveJava(2) \u521b\u5efa\u548c\u9500\u6bc1\u5bf9\u8c61 Part2", "postUrl": "post/EffectiveJava%282%29%20-chuang-jian-he-xiao-hui-dui-xiang-%20Part2.html", "postSourceUrl": "https://github.com/andy1202go/andy1202go.github.io/issues/18", "commentNum": 0, "wordCount": 4401, "description": "## 4 \u4f7f\u7528\u79c1\u6709\u6784\u9020\u65b9\u6cd5\u5f3a\u5316\u4e0d\u53ef\u5b9e\u4f8b\u5316\r\n\r\n\u6709\u4e9b\u7c7b\uff0c\u4e0d\u53ef\u5b9e\u4f8b\u5316\uff1a\r\n\r\n- \u53ea\u5305\u542b\u9759\u6001\u65b9\u6cd5\u548c\u9759\u6001\u5b57\u6bb5\r\n- \u6bd4\u5982java.lang.Math java.util.Arrays\r\n- java.util.Collections\u8fd8\u628a\u4e00\u4e9b\u5de5\u5382\u65b9\u6cd5\u653e\u8fdb\u53bb\u4e86\uff0c\u6bd4\u5982UnmodifiableCollection\u8fd9\u79cd\u53ea\u8bfb\u7c7b\u578b\u7684\u7c7b\uff0c\u53ef\u4ee5\u901a\u8fc7Collections.unmodifiableCollection()\u65b9\u6cd5\u83b7\u5f97\u5b9e\u4f8b\r\n\r\n\u8fd9\u79cd\u4e0d\u53ef\u4ee5\u5b9e\u4f8b\u7684\u7c7b\uff0c\u901a\u5e38\u662f\u5de5\u5177\u7c7b\r\n\r\n> \u8fd9\u6837\u7684\u5de5\u5177\u7c7b\uff08utility classes\uff09\u4e0d\u662f\u8bbe\u8ba1\u7528\u6765\u88ab\u5b9e\u4f8b\u5316\u7684\uff0c\u56e0\u4e3a\u5b9e\u4f8b\u5316\u5bf9\u5b83\u6ca1\u6709\u4efb\u4f55\u610f\u4e49\u3002", "top": 0, "createdAt": 1719473900, "style": "", "script": "", "head": "", "ogImage": "https://avatars.githubusercontent.com/u/11980041", "createdDate": "2024-06-27", "dateLabelColor": "#bc4c00"}, "P19": {"htmlDir": "docs/post/EffectiveJava(3) -chuang-jian-he-xiao-hui-dui-xiang- Part3.html", "labels": ["\u5b66\u4e60\u603b\u7ed3"], "postTitle": "EffectiveJava(3) \u521b\u5efa\u548c\u9500\u6bc1\u5bf9\u8c61 Part3", "postUrl": "post/EffectiveJava%283%29%20-chuang-jian-he-xiao-hui-dui-xiang-%20Part3.html", "postSourceUrl": "https://github.com/andy1202go/andy1202go.github.io/issues/19", "commentNum": 0, "wordCount": 6496, "description": "## 7 \u6d88\u9664\u8fc7\u671f\u7684\u5bf9\u8c61\u5f15\u7528\r\n\r\n\u7b80\u5355\u6765\u8bf4\uff0c\u5c31\u662f\u5bf9\u8c61\u8fc7\u671f\u4e86\uff0c\u4f46\u5f15\u7528\u8fd8\u5728\uff0c\u5c31\u4f1a\u5360\u7528\u5185\u5b58\u4e0d\u91ca\u653e\u3002", "top": 0, "createdAt": 1719473940, "style": "", "script": "", "head": "", "ogImage": "https://avatars.githubusercontent.com/u/11980041", "createdDate": "2024-06-27", "dateLabelColor": "#bc4c00"}, "P20": {"htmlDir": "docs/post/EffectiveJava(4) -dui-yu-suo-you-dui-xiang-du-tong-yong-de-fang-fa- Part1.html", "labels": ["\u5b66\u4e60\u603b\u7ed3"], "postTitle": "EffectiveJava(4) \u5bf9\u4e8e\u6240\u6709\u5bf9\u8c61\u90fd\u901a\u7528\u7684\u65b9\u6cd5 Part1", "postUrl": "post/EffectiveJava%284%29%20-dui-yu-suo-you-dui-xiang-du-tong-yong-de-fang-fa-%20Part1.html", "postSourceUrl": "https://github.com/andy1202go/andy1202go.github.io/issues/20", "commentNum": 0, "wordCount": 16314, "description": "> \u5c3d\u7ba1Object\u662f\u4e00\u4e2a\u5177\u4f53\u7684\u7c7b\uff0c\u4f46\u8bbe\u8ba1\u5b83\u4e3b\u8981\u662f\u4e3a\u4e86\u62d3\u5c55\u3002", "top": 0, "createdAt": 1719474084, "style": "", "script": "", "head": "", "ogImage": "https://avatars.githubusercontent.com/u/11980041", "createdDate": "2024-06-27", "dateLabelColor": "#bc4c00"}, "P21": {"htmlDir": "docs/post/EffectiveJava(5) -dui-yu-suo-you-dui-xiang-du-tong-yong-de-fang-fa- Part2.html", "labels": ["\u5b66\u4e60\u603b\u7ed3"], "postTitle": "EffectiveJava(5) \u5bf9\u4e8e\u6240\u6709\u5bf9\u8c61\u90fd\u901a\u7528\u7684\u65b9\u6cd5 Part2", "postUrl": "post/EffectiveJava%285%29%20-dui-yu-suo-you-dui-xiang-du-tong-yong-de-fang-fa-%20Part2.html", "postSourceUrl": "https://github.com/andy1202go/andy1202go.github.io/issues/21", "commentNum": 0, "wordCount": 11555, "description": "## 12 \u59cb\u7ec8\u91cd\u5199toString\u65b9\u6cd5\r\n\r\n### \u4e3a\u4ec0\u4e48\r\n\r\n- Object\u63d0\u4f9b\u7684toString\u65b9\u6cd5\uff0c\u4e0d\u597d\u7528\uff0c\u662f\u7c7b\u540d@\u5341\u516d\u8fdb\u5236\u7684\u5c55\u793a\uff0c\u770b\u4e0d\u61c2\u5565\u610f\u601d\r\n\r\n  ```java\r\n  //    * It is recommended that all subclasses override this method.    \r\n  public String toString() {\r\n          return getClass().getName() + '@' + Integer.toHexString(hashCode());\r\n      }\r\n  ```\r\n\r\n- \u5b98\u65b9\u90fd\u8bf4\uff0c\u5f3a\u70c8\u5efa\u8bae\uff0c\u6240\u6709\u7c7b\u90fd\u91cd\u5199\u8fd9\u4e2a\u65b9\u6cd5\r\n\r\n- \u6ca1\u6709\u7ea6\u5b9a\uff0c\u60f3equals\u548chashcode\u90a3\u6837\uff0c\u4f46\u826f\u597d\u7684toString\u65b9\u6cd5\uff0c\u5bf9\u540e\u7eed\u7684\u4f7f\u7528\u5927\u6709\u76ca\u5904\u3002", "top": 0, "createdAt": 1719474210, "style": "", "script": "", "head": "", "ogImage": "https://avatars.githubusercontent.com/u/11980041", "createdDate": "2024-06-27", "dateLabelColor": "#bc4c00"}, "P22": {"htmlDir": "docs/post/EffectiveJava(6) -lei-he-jie-kou- Part1.html", "labels": ["\u5b66\u4e60\u603b\u7ed3"], "postTitle": "EffectiveJava(6) \u7c7b\u548c\u63a5\u53e3 Part1", "postUrl": "post/EffectiveJava%286%29%20-lei-he-jie-kou-%20Part1.html", "postSourceUrl": "https://github.com/andy1202go/andy1202go.github.io/issues/22", "commentNum": 0, "wordCount": 13434, "description": "\u5982\u4f55\u4f7f\u7528Java\u63d0\u4f9b\u7684\u57fa\u672c\u5143\u7d20\u6765\u5408\u7406\u8bbe\u8ba1\u7c7b\u548c\u63a5\u53e3\u3002", "top": 0, "createdAt": 1719474358, "style": "", "script": "", "head": "", "ogImage": "https://avatars.githubusercontent.com/u/11980041", "createdDate": "2024-06-27", "dateLabelColor": "#bc4c00"}, "P23": {"htmlDir": "docs/post/shu-ju-jie-gou-yu-suan-fa-zhi-mei-(1) -kai-pian.html", "labels": ["\u8bfe\u7a0b"], "postTitle": "\u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5\u4e4b\u7f8e(1) \u5f00\u7bc7", "postUrl": "post/shu-ju-jie-gou-yu-suan-fa-zhi-mei-%281%29%20-kai-pian.html", "postSourceUrl": "https://github.com/andy1202go/andy1202go.github.io/issues/23", "commentNum": 0, "wordCount": 1079, "description": "## 1 \u5b9a\u4f4d\r\n\r\n- \u57fa\u7840\u5185\u5bb9\r\n- \u77e5\u9053\u6709\u54ea\u4e9b\uff0c\u662f\u4ec0\u4e48\uff0c\u600e\u4e48\u7528\r\n- \u5206\u4e3a\u5165\u95e8\u3001\u57fa\u7840\u3001\u9ad8\u7ea7\u3001\u5b9e\u6218\r\n\r\n## 2 \u671f\u671b\r\n\r\n- \u5bf9\u6570\u636e\u7ed3\u6784\u548c\u7b97\u6cd5\u6709\u521d\u6b65\u8ba4\u77e5\r\n- \u5728\u5e73\u65f6\u8bbe\u8ba1\u548c\u7f16\u5199\u4ee3\u7801\u80fd\u7528\u8d77\u6765\r\n\r\n## 3 \u8001\u751f\u5e38\u8c08\uff0c\u4e3a\u4ec0\u4e48\u8981\u5b66\u4e60\u6570\u636e\u7ed3\u6784\u548c\u7b97\u6cd5\r\n\r\n\u56e0\u4e3a\u8981\u4ece\u552f\u4e00\u6027\u539f\u7406\u51fa\u53d1\uff0c\u63a2\u67e5\u672c\u8d28\u3002", "top": 0, "createdAt": 1719474754, "style": "", "script": "", "head": "", "ogImage": "https://avatars.githubusercontent.com/u/11980041", "createdDate": "2024-06-27", "dateLabelColor": "#bc4c00"}, "P24": {"htmlDir": "docs/post/shu-ju-jie-gou-yu-suan-fa-zhi-mei-(2) -fu-za-du-fen-xi.html", "labels": ["\u5b66\u4e60\u603b\u7ed3"], "postTitle": "\u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5\u4e4b\u7f8e(2) \u590d\u6742\u5ea6\u5206\u6790", "postUrl": "post/shu-ju-jie-gou-yu-suan-fa-zhi-mei-%282%29%20-fu-za-du-fen-xi.html", "postSourceUrl": "https://github.com/andy1202go/andy1202go.github.io/issues/24", "commentNum": 0, "wordCount": 5761, "description": "# 2 \u590d\u6742\u5ea6\u5206\u6790\r\n\r\n[TOC]\r\n\r\n## 1 \u5b9a\u4e49\u53ca\u5fc5\u8981\u6027\r\n\r\n\u4e4b\u6240\u4ee5\u9700\u8981\u590d\u6742\u5ea6\u5206\u6790\uff0c\u5c31\u662f\u9700\u8981\u4e00\u4e2a\u53ef\u4ee5\u91cf\u5316\u7684\u6307\u6807\uff0c\u6765\u8861\u91cf\u4e00\u4e2a\u7b97\u6cd5\u6216\u8005\u4e00\u6bb5\u4ee3\u7801\u7684\u6267\u884c\u6548\u7387\uff0c\u5360\u7528\u5185\u5b58\u7684\u5927\u5c0f\u3002", "top": 0, "createdAt": 1719474828, "style": "", "script": "<script>MathJax = {tex: {inlineMath: [[\"$\", \"$\"]]}};</script><script async src=\"https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js\"></script>", "head": "", "ogImage": "https://avatars.githubusercontent.com/u/11980041", "createdDate": "2024-06-27", "dateLabelColor": "#bc4c00"}, "P25": {"htmlDir": "docs/post/hao-yong-ruan-jian---cha-jian-shou-ji-\uff08-chi-xu-geng-xin-\uff09.html", "labels": ["\u6536\u85cf"], "postTitle": "\u597d\u7528\u8f6f\u4ef6/\u63d2\u4ef6\u6536\u96c6\uff08\u6301\u7eed\u66f4\u65b0\uff09", "postUrl": "post/hao-yong-ruan-jian---cha-jian-shou-ji-%EF%BC%88-chi-xu-geng-xin-%EF%BC%89.html", "postSourceUrl": "https://github.com/andy1202go/andy1202go.github.io/issues/25", "commentNum": 0, "wordCount": 1477, "description": "## \u8f6f\u4ef6\r\n\r\n| \u8f6f\u4ef6\u540d\u79f0           | \u7c7b\u522b             | \u5907\u6ce8 |\r\n| ------------------ | ---------------- | ---- |\r\n| Picasa             | \u56fe\u7247\u67e5\u770b         |      |\r\n| Fluent Reader      | RSS\u7ec8\u7aef          |      |\r\n| LocalSend          | \u5c40\u57df\u7f51\u6587\u4ef6\u4f20\u8f93   |      |\r\n| BeyondCompare      | \u4ee3\u7801\u5bf9\u6bd4         |      |\r\n| Notepad--          | \u6587\u672c\u5904\u7406         |      |\r\n| S3 Browser         | S3\u6587\u4ef6\u67e5\u770b\u7ec8\u7aef   |      |\r\n| \u575a\u679c\u4e91             | \u4e2a\u4eba/\u4f01\u4e1a\u4e91\u76d8    |      |\r\n| Docker Desktop     | Docker           |      |\r\n| RedisInsight       | Redis\u7ec8\u7aef        |      |\r\n| Visual Studio Code | VsCode           |      |\r\n| uTools             | \u9ad8\u6548\u7387\u5feb\u6377\u952e\u5de5\u5177 |      |\r\n| Git Bash           |                  |      |\r\n| draw.io            | \u7ed8\u56fe\u8f6f\u4ef6         |      |\r\n| ScreenToGif        | \u5f55\u5c4f\u8f6cGif\u5c0f\u8f6f\u4ef6  |      |\r\n| SwitchHosts        | Hosts\u6587\u4ef6\u5207\u6362    |      |\r\n| DBeaver            | \u6570\u636e\u5e93\u7ec8\u7aef       |      |\r\n| \u6b27\u8def\u8bcd\u5178           | \u8bcd\u5178             |      |\r\n| Typora             | \u6587\u672c\u64b0\u5199         |      |\r\n| XMind              | \u8111\u56fe             |      |\r\n| PostMan            |                  |      |\r\n| 7-zip              | \u538b\u7f29\u8f6f\u4ef6         |      |\r\n| Everything         | \u672c\u5730\u641c\u7d22\u8f6f\u4ef6     |      |\r\n\r\n## \u6d4f\u89c8\u5668\u63d2\u4ef6\r\n\r\n| \u63d2\u4ef6\u540d\u79f0     | \u7c7b\u522b                 | \u5907\u6ce8 |\r\n| ------------ | -------------------- | ---- |\r\n| Monica       | AI                   |      |\r\n| \u6c89\u6d78\u5f0f\u7ffb\u8bd1   | \u7ffb\u8bd1                 |      |\r\n| \u6781\u5ba2\u65f6\u95f4     |                      |      |\r\n| Smart Header | \u4fee\u6539\u6d4f\u89c8\u5668\u8bf7\u6c42Header |      |\r\n| WizClipper   | \u4e3a\u77e5\u7b14\u8bb0             |      |\r\n| Listen1      | \u8de8\u5e73\u53f0\u542c\u6b4c\u8f6f\u4ef6       |      |\r\n\r\n\u3002", "top": 0, "createdAt": 1719476376, "style": "", "script": "", "head": "", "ogImage": "https://avatars.githubusercontent.com/u/11980041", "createdDate": "2024-06-27", "dateLabelColor": "#bc4c00"}, "P26": {"htmlDir": "docs/post/Mybatis Mapper-sheng-cheng-qi--MapperCreator-yuan-ma-fen-xiang.html", "labels": ["\u6e90\u7801\u5b66\u4e60"], "postTitle": "Mybatis Mapper\u751f\u6210\u5668-MapperCreator\u6e90\u7801\u5206\u4eab", "postUrl": "post/Mybatis%20Mapper-sheng-cheng-qi--MapperCreator-yuan-ma-fen-xiang.html", "postSourceUrl": "https://github.com/andy1202go/andy1202go.github.io/issues/26", "commentNum": 0, "wordCount": 22734, "description": "\u6765\u6e90\uff1ahuzhiyong\r\n```java\r\nimport java.io.FileWriter;\r\nimport java.io.IOException;\r\nimport java.util.ArrayList;\r\nimport java.util.HashMap;\r\nimport java.util.List;\r\n\r\n/**\r\n * Created by huzhiyong on 2017/2/7.\r\n * \u7528\u4e8e\u751f\u6210\u57fa\u672c\u7684mapper\u6587\u4ef6\r\n * \u8f93\u5165\uff1aSQLyog \u5bfc\u51fa\u7684\u5efa\u8868\u8bed\u53e5\r\n * \u8f93\u51fa\uff1a1\uff0c\u57fa\u672cDao\u548cDO\u7c7b\uff0c2\uff0cmapper\u6587\u4ef6\uff0c3,\u6d4b\u8bd5\u4ee3\u7801  \u5168\u90e8\u8f93\u51fa\u5230 output.txt \u6587\u4ef6\r\n *\r\n * sql\u89c4\u8303\uff1a\r\n * 1, \u6570\u636e\u5e93\u5b57\u6bb5\u540d\u5168\u5c0f\u5199\uff0c\u7528\u4e0b\u5212\u7ebf\u9694\u5f00\r\n * 2\uff0c\u9ed8\u8ba4\u6bcf\u4e2a\u8868\u90fd\u6709 id \u5b57\u6bb5\uff08\u81ea\u589e\u4e3b\u952e\uff09 modified_date\r\n * 3, \u6bcf\u5217\u90fd\u8981\u6709\u6ce8\u91ca\uff0c\u5217\u6ce8\u91ca\u5f53\u4e2d\u4e0d\u5305\u62ec \u82f1\u6587\u9017\u53f7\uff0c\u6570\u636e\u5e93\u6ce8\u91ca\u4e0d\u5305\u62ec \u82f1\u6587\u62ec\u53f7\r\n * 4\uff0c\u5220\u9664\u6389\u7d22\u5f15\u884c\uff0c\u5f53\u6709\u8054\u5408\u7d22\u5f15\u65f6\uff0c\u4f1a\u62a5\u9519\r\n */\r\npublic class MapperCreator {\r\n    private static final HashMap<String,String> sqlJavaTypeMap = new HashMap<>();\r\n    private static final HashMap<String,String> sqlJdbcTypeMap = new HashMap<>();\r\n    static{\r\n        sqlJavaTypeMap.put('bigint', 'Long') ;\r\n        sqlJavaTypeMap.put('int', 'Integer') ;\r\n        sqlJavaTypeMap.put('tinyint', 'Integer') ;\r\n        sqlJavaTypeMap.put('varchar', 'String') ;\r\n        sqlJavaTypeMap.put('text', 'String') ;\r\n        sqlJavaTypeMap.put('char', 'String') ;\r\n        sqlJavaTypeMap.put('datetime', 'Date') ;\r\n        sqlJavaTypeMap.put('timestamp', 'Date') ;\r\n        sqlJavaTypeMap.put('mediumtext', 'String') ;\r\n\r\n        sqlJdbcTypeMap.put('bigint', 'BIGINT') ;\r\n        sqlJdbcTypeMap.put('int', 'INTEGER') ;\r\n        sqlJdbcTypeMap.put('tinyint', 'INTEGER') ;\r\n        sqlJdbcTypeMap.put('varchar', 'VARCHAR') ;\r\n        sqlJdbcTypeMap.put('text', 'VARCHAR') ;\r\n        sqlJdbcTypeMap.put('char', 'CHAR') ;\r\n        sqlJdbcTypeMap.put('datetime', 'TIMESTAMP') ;// \u6ce8\u610f\uff0c\u8fd9\u91cc\u4f7f\u7528\u8fd9\u4e2a\u7c7b\u578b\uff0c\u4e0d\u80fd\u76f4\u63a5\u4f7f\u7528DATE,mybatis\u7684Date\u53ea\u6709\u5e74\u6708\u65e5\r\n        sqlJdbcTypeMap.put('timestamp', 'TIMESTAMP') ;\r\n        sqlJdbcTypeMap.put('mediumtext', 'VARCHAR') ;\r\n    }\r\n\r\n    private static final String DAO_END = 'Dao' ;\r\n    private static final String DO_END = 'DO' ;\r\n\r\n\r\n\r\n    // \u4fee\u6539\u8fd9\u4e24\u4e2a\u53c2\u6570\r\n    private static final String OUTPUT_DIR = 'C:\\\\Users\\\\jrliangbo\\\\Downloads' ;\r\n    private static final String PACKAGE_NAME = 'com.heytap.mall.comment.core.domain.dao.' ;\r\n\r\n\r\n    public static void main(String[] args) throws Exception{\r\n\r\n        // \u6b64\u5904\u5c06sql\u5efa\u8868\u8bed\u53e5\u7c98\u51fa\uff0c\u6ce8\u610fsql\u89c4\u8303\r\n       String sql = 'CREATE TABLE `t_comment_liking` (\\n' +\r\n               '  `id` bigint(20) NOT NULL AUTO_INCREMENT COMMENT 'id \u81ea\u589e\u4e3b\u952e',\\n' +\r\n               '  `comment_id` bigint(20) NOT NULL COMMENT '\u8bc4\u8bbaid \u8bc4\u8bbaid',\\n' +\r\n               '  `user_id` varchar(64) DEFAULT NULL COMMENT '\u7528\u6237\u552f\u4e00\u6807\u8bc6 \u7528\u6237\u552f\u4e00\u6807\u8bc6',\\n' +\r\n               '  `device_id` varchar(64) DEFAULT NULL COMMENT '\u8bbe\u5907id',\\n' +\r\n               '  `liking` tinyint(1) DEFAULT NULL COMMENT '\u70b9\u8d5e \u70b9\u8d5e\u4e0e\u5426\uff0c1\u70b9\u8d5e',\\n' +\r\n               '  `data_status` tinyint(1) DEFAULT NULL COMMENT '\u6570\u636e\u6709\u6548\u6027 \u6570\u636e\u662f\u5426\u6709\u6548\uff0c1\u6709\u6548',\\n' +\r\n               '  `create_time` timestamp NOT NULL COMMENT '\u521b\u5efa\u65f6\u95f4',\\n' +\r\n               '  `modify_time` timestamp NOT NULL COMMENT '\u4fee\u6539\u65f6\u95f4',\\n' +\r\n               '  `created` varchar(32) NOT NULL DEFAULT '' COMMENT '\u521b\u5efa\u4eba',\\n' +\r\n               '  `modified` varchar(32) NOT NULL DEFAULT '' COMMENT '\u66f4\u65b0\u4eba',\\n' +\r\n               '  PRIMARY KEY (`id`)\\n' +\r\n               ') ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='\u8bc4\u8bba\u70b9\u8d5e\u8868 '' ;\r\n\r\n\r\n        sql = sql.replace('\\n','') ;\r\n        process(sql) ;\r\n        System.out.println('end');\r\n\r\n    }\r\n\r\n    /**\r\n     * \u751f\u6210 java DO\u7c7b\r\n     * \u751f\u6210 Dao\u7c7b\r\n     * \u751f\u6210 mapper\u6587\u4ef6\r\n     * \u751f\u6210 \u6d4b\u8bd5\u7c7b\r\n     */\r\n    private static void process(String allData){\r\n        int begin = allData.indexOf('(');\r\n        int end = allData.lastIndexOf(')');\r\n\r\n        String firstLine = allData.substring(0, begin) ;\r\n        String columnLine = allData.substring(begin+1,end);\r\n\r\n        String tableName = getTableName(firstLine) ;\r\n\r\n        List<Item> columnList = getColumnList(columnLine) ;\r\n\r\n        String baseName = columnName2JavaName(tableName) ;\r\n        String doVarName = baseName + DO_END ;\r\n        String daoVarName = baseName + DAO_END ;\r\n        String doClassName = doVarName.substring(0,1).toUpperCase() + doVarName.substring(1) ;\r\n        String daoClassName = daoVarName.substring(0,1).toUpperCase() + daoVarName.substring(1) ;\r\n        StringBuilder sb = new StringBuilder('') ;\r\n\r\n        sb.append(doClassName);\r\n        sb.append('-----------------------------------------------------------\\n\\n') ;\r\n        sb.append(createDoFile(columnList)) ;\r\n        sb.append('\\n\\n') ;\r\n\r\n\r\n        sb.append(daoClassName);\r\n        sb.append('-----------------------------------------------------------\\n\\n') ;\r\n        sb.append(createDaoFile(doVarName, doClassName, daoClassName)) ;\r\n        sb.append('\\n\\n') ;\r\n\r\n\r\n        sb.append(baseName.substring(0,1).toUpperCase());\r\n        sb.append(baseName.substring(1));\r\n        sb.append('Mapper.xml-------------------------------------------------\\n\\n') ;\r\n        sb.append(createMapperFile(columnList,daoClassName,doClassName,tableName));\r\n        sb.append('\\n\\n');\r\n\r\n\r\n\r\n        sb.append(daoClassName);\r\n        sb.append('Test.java');\r\n        sb.append('-----------------------------------------------------------\\n\\n') ;\r\n        sb.append(createTestFile(columnList,doClassName,doVarName,daoClassName,daoVarName)) ;\r\n        sb.append('\\n\\n') ;\r\n\r\n\r\n        writeToFile(OUTPUT_DIR, sb.toString()) ;\r\n\r\n        return ;\r\n    }\r\n\r\n\r\n    private static void writeToFile(String dir, String data){\r\n        String filePath = dir + '\\\\\\\\' + 'output.txt' ;\r\n        FileWriter fos;\r\n        try {\r\n            fos = new FileWriter(filePath);\r\n            fos.write(data);\r\n            fos.flush();\r\n            fos.close();\r\n        } catch (IOException e) {\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n\r\n\r\n\r\n    private static String createDoFile(List<Item> columnList){\r\n        StringBuilder sb = new StringBuilder('') ;\r\n        for(Item item : columnList){\r\n            sb.append('/**  ');\r\n            sb.append(item.getComment());\r\n            sb.append('  */\\n');\r\n\r\n            sb.append('private ');\r\n            sb.append(item.getJavaType());\r\n            sb.append(' ');\r\n            sb.append(item.getName()) ;\r\n            sb.append(';\\n\\n') ;\r\n        }\r\n\r\n        sb.append('\\n\\n');\r\n        return sb.toString() ;\r\n    }\r\n\r\n    private static String createDaoFile(String doVarName,String doClassName,String daoClassName){\r\n        String base  = '@SuperDao\\n' +\r\n                'public interface TMPDAO {\\n' +\r\n                '    int insert(TMPDO tmpdo);\\n' +\r\n                '    int update(TMPDO tmpdo);\\n' +\r\n                '    int delete(Long id);\\n' +\r\n                '    TMPDO getById(Long id);\\n' +\r\n                '}';\r\n        base = base.replace('TMPDAO',daoClassName);\r\n        base = base.replace('TMPDO',doClassName);\r\n        base = base.replace('tmpdo',doVarName);\r\n        return base ;\r\n\r\n    }\r\n\r\n    private static String createMapperFile(List<Item> columnList,String daoClassName,String doClassName,String tableName){\r\n        StringBuilder sb = new StringBuilder('<?xml version=\\'1.0\\' encoding=\\'UTF-8\\' ?>\\n' +\r\n                '<!DOCTYPE mapper PUBLIC \\'-//mybatis.org//DTD Mapper 3.0//EN\\' \\'http://mybatis.org/dtd/mybatis-3-mapper.dtd\\' >\\n' +\r\n                '<mapper namespace=\\'');\r\n        sb.append(PACKAGE_NAME);\r\n        sb.append(daoClassName);\r\n        sb.append('\\'>\\n');\r\n\r\n        sb.append('<resultMap id=\\'BaseResultMap\\' type=\\'');\r\n        sb.append(doClassName);\r\n        sb.append('\\'>\\n') ;\r\n\r\n        sb.append('<id column=\\'id\\' property=\\'id\\' jdbcType=\\'BIGINT\\'/>\\n') ;\r\n\r\n        for(Item item : columnList){\r\n            if(!item.getName().equals('id')){\r\n                sb.append('<result column=\\'');\r\n                sb.append(item.getColumn());\r\n                sb.append('\\' property=\\'');\r\n                sb.append(item.getName());\r\n                sb.append('\\' jdbcType=\\'');\r\n                sb.append(item.getJdbcType());\r\n                sb.append('\\'/>\\n');\r\n\r\n            }\r\n        }\r\n\r\n        sb.append(' </resultMap>\\n') ;\r\n\r\n        sb.append('<sql id=\\'Base_Column_List\\'>\\n');\r\n        sb.append(columnList.get(0).getColumn());\r\n        for(int i=1; i<columnList.size(); i++){\r\n            sb.append(',') ;\r\n            sb.append(columnList.get(i).getColumn()) ;\r\n        }\r\n        sb.append('\\n');\r\n        sb.append('</sql>\\n') ;\r\n\r\n        // insert\r\n        sb.append(createInsertSql(columnList, doClassName, tableName)) ;\r\n        sb.append('\\n\\n');\r\n\r\n        // update\r\n        sb.append(createUpdateSql(columnList, doClassName, tableName)) ;\r\n        sb.append('\\n\\n');\r\n\r\n        // getById\r\n        sb.append(createQuerySql(tableName)) ;\r\n        sb.append('\\n\\n');\r\n\r\n        // delete\r\n        sb.append(createDeleteSql(tableName)) ;\r\n        sb.append('\\n\\n');\r\n\r\n        sb.append('</mapper>\\n');\r\n        return sb.toString() ;\r\n\r\n    }\r\n\r\n\r\n    private static String createInsertSql(List<Item> columnList,String doClassName,String tableName){\r\n        StringBuilder sb = new StringBuilder('');\r\n        sb.append('<insert id=\\'insert\\' useGeneratedKeys=\\'true\\' keyProperty=\\'id\\' parameterType=\\'');\r\n        sb.append(doClassName);\r\n        sb.append('\\'>\\n');\r\n        sb.append('INSERT into ');\r\n        sb.append(tableName) ;\r\n        sb.append('\\n');\r\n        sb.append('<trim prefix=\\'(\\' suffix=\\')\\'>\\n');\r\n        for(Item item : columnList){\r\n            if(!item.getColumn().equals('id') && !item.getColumn().equals('modified_date')){\r\n                if(item.getColumn().equals('created_date')){\r\n                    sb.append('created_date,\\n');\r\n                }else if(item.isCanEmpty()){\r\n                    sb.append('<if test=\\'');\r\n                    sb.append(item.getName());\r\n                    sb.append('!= null\\'>\\n');\r\n                    sb.append(item.getColumn());\r\n                    sb.append(',\\n');\r\n                    sb.append('</if>\\n');\r\n                }else{\r\n                    sb.append(item.getColumn());\r\n                    sb.append(',\\n') ;\r\n                }\r\n            }\r\n        }\r\n        sb.append('modified_date\\n');\r\n        sb.append('</trim>\\n') ;\r\n\r\n\r\n        sb.append('<trim prefix=\\'values (\\' suffix=\\')\\'>\\n');\r\n        for(Item item : columnList){\r\n            if(!item.getColumn().equals('id') && !item.getColumn().equals('modified_date')){\r\n                if(item.getColumn().equals('created_date')){\r\n                    sb.append('current_timestamp,\\n');\r\n                }else if(item.isCanEmpty()){\r\n                    sb.append('<if test=\\'');\r\n                    sb.append(item.getName());\r\n                    sb.append(' != null\\'>\\n');\r\n                    sb.append('#{');\r\n                    sb.append(item.getName());\r\n                    sb.append(',jdbcType=');\r\n                    sb.append(item.getJdbcType());\r\n                    sb.append('},\\n');\r\n                    sb.append('</if>\\n');\r\n                }else{\r\n                    sb.append('#{');\r\n                    sb.append(item.getName());\r\n                    sb.append(',jdbcType=');\r\n                    sb.append(item.getJdbcType());\r\n                    sb.append('},\\n');\r\n                }\r\n            }\r\n        }\r\n        sb.append('current_timestamp\\n');\r\n        sb.append('</trim>\\n') ;\r\n        sb.append('</insert>\\n') ;\r\n        return sb.toString() ;\r\n    }\r\n\r\n\r\n    private static String createUpdateSql(List<Item> columnList,String doClassName,String tableName){\r\n        StringBuilder sb = new StringBuilder('');\r\n        sb.append('<update id=\\'update\\' parameterType=\\'');\r\n        sb.append(doClassName);\r\n        sb.append('\\'>\\n');\r\n        sb.append('update ');\r\n        sb.append(tableName);\r\n        sb.append('\\n');\r\n        sb.append('<set>\\n');\r\n\r\n\r\n        for(Item item : columnList){\r\n            if(!item.getColumn().equals('id')\r\n                    && !item.getColumn().equals('modified_date')\r\n                    && !item.getColumn().equals('created_date')){\r\n\r\n                sb.append('<if test=\\'');\r\n                sb.append(item.getName());\r\n                sb.append(' != null\\'>\\n');\r\n                sb.append(item.getColumn());\r\n                sb.append(' = #{');\r\n                sb.append(item.getName());\r\n                sb.append(',jdbcType=');\r\n                sb.append(item.getJdbcType());\r\n                sb.append('},\\n');\r\n                sb.append('</if>\\n');\r\n            }\r\n        }\r\n        sb.append('modified_date = current_timestamp\\n');\r\n        sb.append('</set>\\n');\r\n        sb.append('where id = #{id,jdbcType=BIGINT}\\n');\r\n        sb.append('</update>\\n');\r\n\r\n\r\n        return sb.toString() ;\r\n    }\r\n\r\n    private static String createQuerySql(String tableName){\r\n        StringBuilder sb = new StringBuilder('');\r\n        sb.append('<select id=\\'getById\\' resultMap=\\'BaseResultMap\\' parameterType=\\'java.lang.Long\\'>\\n');\r\n        sb.append('SELECT\\n');\r\n        sb.append('<include refid=\\'Base_Column_List\\' />\\n');\r\n        sb.append('from ');\r\n        sb.append(tableName);\r\n        sb.append('\\n');\r\n        sb.append('where id = #{id,jdbcType=BIGINT}\\n');\r\n        sb.append('</select>\\n') ;\r\n\r\n        return sb.toString() ;\r\n    }\r\n\r\n    private static String createDeleteSql(String tableName){\r\n        StringBuilder sb = new StringBuilder('');\r\n        sb.append('<delete id=\\'delete\\'  parameterType=\\'java.lang.Long\\'>\\n');\r\n        sb.append('DELETE\\n');\r\n        sb.append('from ');\r\n        sb.append(tableName);\r\n        sb.append('\\n');\r\n        sb.append('where id = #{id,jdbcType=BIGINT}\\n');\r\n        sb.append('</delete>\\n') ;\r\n\r\n        return sb.toString() ;\r\n    }\r\n\r\n    private static String createTestFile(List<Item> columnList,String doClassName,String doVarName,String daoClassName, String daoVarName){\r\n\r\n        String model = 'public class TMPXXXDaoTest extends TestBase {\\n' +\r\n                '    private static final Logger logger = LoggerFactory.getLogger(TMPXXXDaoTest.class);\\n' +\r\n                '\\n' +\r\n                '    @Resource\\n' +\r\n                '    private TMPXXXDao tmpXXXDao;\\n' +\r\n                '\\n' +\r\n                '    private Long id ;\\n' +\r\n                '\\n' +\r\n                '    @Test\\n' +\r\n                '    public void testInsert(){\\n' +\r\n                '        TMPXXXDO tmpXXXDO = create();\\n' +\r\n                '        int result = tmpXXXDao.insert(tmpXXXDO);\\n' +\r\n                '        Assert.assertTrue(result > 0);\\n' +\r\n                '        id = tmpXXXDO.getId() ;\\n' +\r\n                '        Assert.assertNotNull(id);\\n' +\r\n                '        Assert.assertTrue(id > 0);\\n' +\r\n                '    }\\n' +\r\n                '\\n' +\r\n                '    @Test(dependsOnMethods = \\'testInsert\\')\\n' +\r\n                '    public void testGetById(){\\n' +\r\n                '        TMPXXXDO tmpXXXDO = tmpXXXDao.getById(id);\\n' +\r\n                '        Assert.assertNotNull(tmpXXXDO);\\n' +\r\n                '        logger.info(\\'testGetById\u83b7\u5f97\u5bf9\u8c61\uff1a {}\\', tmpXXXDO);\\n' +\r\n                '    }\\n' +\r\n                '\\n' +\r\n                '    @Test(dependsOnMethods = \\'testGetById\\')\\n' +\r\n                '    public void testUpdate(){\\n' +\r\n                '        TMPXXXDO tmpXXXDO = create();\\n' +\r\n                '        tmpXXXDO.setId(id);\\n' +\r\n                '        SET_STRING_PLACEHOLDER\\n' +\r\n                '        int result = tmpXXXDao.update(tmpXXXDO);\\n' +\r\n                '        Assert.assertTrue(result > 0);\\n' +\r\n                '    }\\n' +\r\n                '\\n' +\r\n                '    @Test(dependsOnMethods = \\'testUpdate\\')\\n' +\r\n                '    public void testGetById2(){\\n' +\r\n                '        TMPXXXDO tmpXXXDO = tmpXXXDao.getById(id);\\n' +\r\n                '        Assert.assertNotNull(tmpXXXDO);\\n' +\r\n                '        logger.info(\\'testGetById2\u83b7\u5f97\u5bf9\u8c61\uff1a {}\\', tmpXXXDO);\\n' +\r\n                '    }\\n' +\r\n                '\\n' +\r\n                '    @Test(dependsOnMethods = \\'testGetById2\\')\\n' +\r\n                '    public void testDelete(){\\n' +\r\n                '        int result = tmpXXXDao.delete(id);\\n' +\r\n                '        Assert.assertTrue(result > 0);\\n' +\r\n                '    }\\n' +\r\n                '\\n' +\r\n                '    @Test(dependsOnMethods = \\'testDelete\\')\\n' +\r\n                '    public void testGetById3(){\\n' +\r\n                '        TMPXXXDO tmpXXXDO = tmpXXXDao.getById(id);\\n' +\r\n                '        Assert.assertNull(tmpXXXDO);\\n' +\r\n                '    }\\n' +\r\n                '\\n' +\r\n                '\\n' +\r\n                '    private TMPXXXDO create(){\\n' +\r\n                '        TMPXXXDO tmpXXXDO = new TMPXXXDO();\\n' +\r\n                '        SET_STRING_PLACEHOLDER\\n' +\r\n                '        return tmpXXXDO ;\\n' +\r\n                '    }\\n' +\r\n                '}' ;\r\n\r\n        model = model.replace('TMPXXXDao',daoClassName);\r\n        model = model.replace('tmpXXXDao',daoVarName);\r\n        model = model.replace('TMPXXXDO',doClassName);\r\n        model = model.replace('tmpXXXDO',doVarName);\r\n        String setString = getSetString(columnList,doVarName);\r\n        model = model.replace('SET_STRING_PLACEHOLDER', setString);\r\n        return model ;\r\n\r\n    }\r\n\r\n    private static String getSetString(List<Item> columnList,String doVarName){\r\n        StringBuilder sb = new StringBuilder('');\r\n        for(Item item:columnList){\r\n            if(!item.getColumn().equals('id')){\r\n                if(item.isCanEmpty()){\r\n                    sb.append('//') ;\r\n                }\r\n                sb.append(doVarName);\r\n                sb.append('.set');\r\n                sb.append(item.getName().substring(0,1).toUpperCase());\r\n                sb.append(item.getName().substring(1));\r\n                sb.append('(');\r\n\r\n                // \u5f53\u6709\u65b0\u7684\u7c7b\u578b\u65f6\uff0c\u9700\u8981\u5728\u6b64\u5904\u6dfb\u52a0\r\n                if(item.getJavaType().equals('Integer')){\r\n                    sb.append('0');\r\n                }else if(item.getJavaType().equals('Long')){\r\n                    sb.append('0L');\r\n                }else if(item.getJavaType().equals('String')){\r\n                    sb.append('\\'hello world \u6d4b\u8bd5\\'');\r\n                }else if(item.getJavaType().equals('Date')){\r\n                    sb.append('new Date()');\r\n                }else{\r\n                    sb.append('');\r\n                }\r\n\r\n                sb.append(');\\n');\r\n            }\r\n\r\n        }\r\n\r\n        return sb.toString() ;\r\n\r\n    }\r\n\r\n\r\n\r\n    private static List<Item> getColumnList(String data){\r\n        List<Item> result = new ArrayList<Item>();\r\n        String[] array = data.split(',') ;\r\n        for(String line : array){\r\n            if(!isKeyLine(line)){\r\n                Item item = new Item();\r\n                item.setColumn(getColumn(line));\r\n                item.setComment(getComment(line));\r\n                item.setSqlType(getType(line));\r\n                item.setCanEmpty(canEmpty(line));\r\n                if(!sqlJavaTypeMap.containsKey(item.getSqlType())){\r\n                    throw new RuntimeException('\u627e\u4e0d\u5230\u5bf9\u5e94\u7c7b\u578b') ;\r\n                }\r\n                item.setJavaType(sqlJavaTypeMap.get(item.getSqlType()));\r\n                item.setJdbcType(sqlJdbcTypeMap.get(item.getSqlType()));\r\n                item.setName(columnName2JavaName(item.getColumn()));\r\n                result.add(item);\r\n            }\r\n\r\n        }\r\n        return result ;\r\n    }\r\n\r\n    private static boolean isKeyLine(String line){\r\n        line = line.trim();\r\n        line = line.toUpperCase() ;\r\n        if(line.startsWith('PRIMARY')\r\n                || line.startsWith('KEY')\r\n                || line.startsWith('INDEX')\r\n                || line.startsWith('UNIQUE')\r\n                ){\r\n            return true ;\r\n        }\r\n        return false ;\r\n    }\r\n\r\n\r\n\r\n    private static String removeQuote(String data, int quote){\r\n        data = data.trim() ;\r\n        int begin = data.indexOf(quote);\r\n        if(begin > -1){\r\n            int end = data.indexOf(quote,begin+1);\r\n            if(end > -1){\r\n                return data.substring(begin+1,end) ;\r\n            }\r\n        }\r\n        return data ;\r\n    }\r\n\r\n    private static String getTableName(String firstLine){\r\n        String[] array = firstLine.split(' ');\r\n        int length = array.length;\r\n        return removeQuote(array[length-1],'`');\r\n    }\r\n\r\n    // \u83b7\u53d6\u6ce8\u91ca\uff0cCOMMENT \u4e4b\u540e\u7b2c\u4e00\u4e2a\u7528 \u5f15\u53f7\u5305\u8d77\u6765\u7684\u5185\u5bb9\r\n    private static String getComment(String line){\r\n        String[] array = line.split('COMMENT');\r\n        return removeQuote(array[1],'\\'') ;\r\n    }\r\n\r\n    private static String getColumn(String line){\r\n        return removeQuote(line,'`');\r\n    }\r\n\r\n    private static boolean canEmpty(String line){\r\n        // \u6709\u9ed8\u8ba4\u503c\u7684\u8ba4\u4e3a\u63d2\u5165\u662f\u53ef\u4ee5\u4e3a\u7a7a\r\n        if(line.contains('NOT NULL DEFAULT')){\r\n            return true ;\r\n        }\r\n        return !(line.contains('NOT NULL')) ;\r\n    }\r\n\r\n    private static String getType(String line){\r\n        line = line.trim() ;\r\n        String[] array = line.split(' ');\r\n        String name = array[1];\r\n        int end = name.indexOf('(');\r\n        if(end > 1){\r\n            return name.substring(0,end) ;\r\n        }\r\n        return name ;\r\n    }\r\n\r\n\r\n\r\n\r\n    private static String columnName2JavaName(String column){\r\n        column = column.toLowerCase() ;\r\n        String[] array = column.split('_') ;\r\n        StringBuilder sb = new StringBuilder('');\r\n        sb.append(array[0]);\r\n        for(int i=1; i<array.length; i++){\r\n            sb.append(array[i].substring(0,1).toUpperCase()) ;\r\n            sb.append(array[i].substring(1)) ;\r\n        }\r\n\r\n        return sb.toString() ;\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\nclass Item{\r\n    private String name; // java\u5b57\u6bb5\u540d\r\n    private String column ; // \u6570\u636e\u5e93\u5217\u540d\r\n    private String sqlType ;\r\n    private String javaType;\r\n    private String jdbcType ;\r\n    private boolean canEmpty ;// \u662f\u5426\u53ef\u4e3aNull\r\n    private String comment ; //\u6ce8\u91ca\r\n\r\n    public String getName() {\r\n        return name;\r\n    }\r\n\r\n    public void setName(String name) {\r\n        this.name = name;\r\n    }\r\n\r\n    public String getColumn() {\r\n        return column;\r\n    }\r\n\r\n    public void setColumn(String column) {\r\n        this.column = column;\r\n    }\r\n\r\n    public String getSqlType() {\r\n        return sqlType;\r\n    }\r\n\r\n    public void setSqlType(String sqlType) {\r\n        this.sqlType = sqlType;\r\n    }\r\n\r\n    public String getJavaType() {\r\n        return javaType;\r\n    }\r\n\r\n    public void setJavaType(String javaType) {\r\n        this.javaType = javaType;\r\n    }\r\n\r\n    public String getJdbcType() {\r\n        return jdbcType;\r\n    }\r\n\r\n    public void setJdbcType(String jdbcType) {\r\n        this.jdbcType = jdbcType;\r\n    }\r\n\r\n    public boolean isCanEmpty() {\r\n        return canEmpty;\r\n    }\r\n\r\n    public void setCanEmpty(boolean canEmpty) {\r\n        this.canEmpty = canEmpty;\r\n    }\r\n\r\n    public String getComment() {\r\n        return comment;\r\n    }\r\n\r\n    public void setComment(String comment) {\r\n        this.comment = comment;\r\n    }\r\n}\r\n\r\n```\u3002", "top": 0, "createdAt": 1719476716, "style": "", "script": "", "head": "", "ogImage": "https://avatars.githubusercontent.com/u/11980041", "createdDate": "2024-06-27", "dateLabelColor": "#bc4c00"}, "P27": {"htmlDir": "docs/post/chang-yong-CURL-zhi-nan.html", "labels": ["\u5b66\u4e60\u603b\u7ed3"], "postTitle": "\u5e38\u7528CURL\u6307\u5357", "postUrl": "post/chang-yong-CURL-zhi-nan.html", "postSourceUrl": "https://github.com/andy1202go/andy1202go.github.io/issues/27", "commentNum": 0, "wordCount": 9727, "description": "## \u5e38\u7528\u547d\u4ee4\r\n\r\n```\r\ncurl www.baidu.com get\u767e\u5ea6\r\ncurl -X POST www.baidu.com\r\ncurl -X POST --data 'shit=happens' www.baidu.com\r\ncurl -X POST --data-urlencode 'shit=happens' www.baidu.com \u8868\u5355\u7f16\u7801\uff0cpost\u63d0\u4ea4\r\ncurl -i www.baidu.com \u663e\u793aheader\u4fe1\u606f\r\ncurl -o test.txt www.baidu.com \u4fdd\u5b58\r\ncurl -v test.txt www.baidu.com \u663e\u793a\u901a\u4fe1\u8fc7\u7a0b\r\ncurl --user-agent 'Mozilla/5.0' www.baidu.com\r\ncurl --cookie 'name=xxx' www.baidu.com\r\ncurl --header 'Content-Type:applicaiton/json' www.baidu.com\r\ncurl --user name:password www.baidu.com\r\n```\r\n\r\n### \u4e00\u6b21curl\uff0c\u591a\u4e2aURL\r\n\r\n\u7a7a\u683c\u9694\u5f00\u5c31\u884c\uff1bjianshu.com/p/fc0eb6c60816\r\n\r\n### GET\u547d\u4ee4\u7684\u591a\u4e2a\u53c2\u6570\u95ee\u9898\r\n\r\n\u4f1a\u6709&\u5728URL\u4e2d\uff0c\u4e0d\u540c\u64cd\u4f5c\u7cfb\u7edf\u7684\u5199\u6cd5\u4e0d\u540chttps://blog.csdn.net/sinat_27818621/article/details/104517435\r\n\r\nlinux\uff1a\r\n\r\n```shell\r\ncurl localhost:8080/test?a=1\\&b=2\r\n```\r\n\r\nwindows\r\n\r\n```shell\r\ncurl -s 'http://localhost:8080/get?name=zhangsan&age=12&sex=1'\r\n```\r\n\r\n## CookBook\r\n\r\n### Make a POST Request (TLDR: Use -X POST argument)\r\n\r\n1. [Send an Empty POST Request](https://catonmat.net/cookbooks/curl/make-post-request#send-empty-post-request)\r\n\r\n   ```shell\r\n   curl -X POST https://sth.com\r\n   ```\r\n\r\n   \r\n\r\n2. [Send a POST Request with Form Data](https://catonmat.net/cookbooks/curl/make-post-request#post-form-data)\r\n\r\n   ```shell\r\n   curl -d 'a=1&b=2' -X POST https://sth.com\r\n   ```\r\n\r\n   > When using the `-d` argument, curl also sets the `Content-Type` header to `application/x-www-form-urlencoded`.\r\n   >\r\n   > Note that the `key=value` data should be URL-escaped.\r\n\r\n3. [Skipping the -X Argument](https://catonmat.net/cookbooks/curl/make-post-request#skipping-x-argument)\r\n\r\n   ```shell\r\n   curl -d 'a=1&b=2' https://sht.com\r\n   ```\r\n\r\n   > When `-d` is used, curl implicitly sets the request's type to POST.\r\n\r\n4. [A Neater Way to POST Data](https://catonmat.net/cookbooks/curl/make-post-request#neater-way-to-post)\r\n\r\n   ```shell\r\n   curl -d 'a=1' -d 'b=2' https://sth.com\r\n   ```\r\n\r\n   \r\n\r\n5. [Send a POST Request and Follow a Redirect](https://catonmat.net/cookbooks/curl/make-post-request#post-with-redirect)\r\n\r\n6. [Send a POST Request with JSON Data](https://catonmat.net/cookbooks/curl/make-post-request#post-json-data)\r\n\r\n   ```shell\r\n   curl -d '{'a':2,'b':1}' -H 'Content-Type:application/json' https://sth.com\r\n   ```\r\n\r\n   \u5fc5\u987b\u624b\u52a8\u58f0\u660eContent-Type\u5934\u4e3aapplication/json\r\n\r\n7. [Send a POST Request with XML Data](https://catonmat.net/cookbooks/curl/make-post-request#post-xml-data)\r\n\r\n   ```shell\r\n   curl -d '<user>1</user>' -H 'Content-Type:text/xml' https://sth.com\r\n   ```\r\n\r\n   \u6ce8\u610fContent-Type\r\n\r\n8. [Send a POST Request with Plain Text Data](https://catonmat.net/cookbooks/curl/make-post-request#post-plain-text-data)\r\n\r\n   ```shell\r\n   curl -d 'hello world' -H 'Content-Type:text/plain' https://sht.com\r\n   ```\r\n\r\n   \u6ce8\u610fContent-Type\r\n\r\n9. [Send a POST Request with Data from a File](https://catonmat.net/cookbooks/curl/make-post-request#post-data-from-file)\r\n\r\n10. [URL-encode POST Data](https://catonmat.net/cookbooks/curl/make-post-request#url-encode-post-data)\r\n\r\n    > So far, all recipes have been using the `-d` argument to add POST data to requests. This argument assumes that your data is URL-encoded already. If it is not, then there can be some trouble. If your data is not URL-encoded, then replace `-d` with `--data-urlencode`. It works exactly the same way as `-d`, except the data gets URL-encoded by curl before it's sent out on the wire.\r\n\r\n    ```shell\r\n    curl --data-urlencode 'a=1' https://sth.com\r\n    ```\r\n\r\n    -d\u662f\u5047\u8bbe\u53c2\u6570\u5df2\u7ecfurl\u7f16\u7801\u597d\u4e86\u7684\uff0c--data-urlencode\u662f\u5bf9\u53c2\u6570\u6267\u884curl\u7f16\u7801\r\n\r\n11. [POST a Binary File](https://catonmat.net/cookbooks/curl/make-post-request#post-binary-file)\r\n\r\n12. [POST a Binary File and Set Its MIME Type](https://catonmat.net/cookbooks/curl/make-post-request#post-binary-file-set-mime)\r\n\r\n13. [POST a Binary File and Change Its Filename](https://catonmat.net/cookbooks/curl/make-post-request#post-binary-file-change-filename)\r\n\r\n### Add POST Data to a Request (TLDR: Use -d var=val argument)\r\n\r\n\u540c\u4e0a\u4e00\u4e2a\r\n\r\n### Construct a Query String (TLDR: Use -G argument)\r\n\r\n> This curl recipe shows you how to construct query strings for your GET requests. This is done via the `-G` command line argument in combination with the `-d` or `--data-urlencode` arguments. The `-G` argument will append the data specified in `-d` and `--data-urlencode` arguments at the end of the request URL, joining all data pieces with the `&` character and separating them from the URL with the `?` character.\r\n\r\n\u4f7f\u7528-G\u548c-d\u6216\u8005--data-urlencode\uff0c\u628a\u53c2\u6570\u6309\u7167?&&\u7684\u683c\u5f0f\u62fc\u63a5\u5230url\u7684\u540e\u9762\r\n\r\n1. [Construct Two Query Arguments](https://catonmat.net/cookbooks/curl/construct-query-string#construct-two-query-arguments)\r\n\r\n   ```shell\r\n   curl -G -d 'a=1' -d 'b=2' https://sth.com\r\n   ```\r\n\r\n   > Be careful \u2013 if you forget the `-G` argument, then curl will make a POST request instead!\r\n\r\n2. [URL-encode a Query Argument](https://catonmat.net/cookbooks/curl/construct-query-string#url-encode-query-argument)\r\n\r\n   ```shell\r\n   curl -G --data-urlencode 'comment=this cookbook is awesome' https://catonmat.net\r\n   ```\r\n\r\n### Add HTTP Headers (TLDR: Use -H 'Header: Value' argument)\r\n\r\n1. [Add a Single Header](https://catonmat.net/cookbooks/curl/add-http-headers#add-a-single-header)\r\n2. [Add Two Headers](https://catonmat.net/cookbooks/curl/add-http-headers#add-two-header)\r\n3. [Add an Empty Header](https://catonmat.net/cookbooks/curl/add-http-headers#add-an-empty-header)\r\n\r\n```shell\r\ncurl -H 'Accept-Language: en-US' -H 'Secret-Message: xyzzy' https://google.com\r\ncurl -H 'Puppies;' https://google.com\r\n```\r\n\r\n### Change the User Agent (TLDR: Use -A 'User Agent' argument)\r\n\r\n\u6d4f\u89c8\u5668\u5565\u7684\u8bbe\u7f6e\r\n\r\n### Set Cookies (TLDR: Use -b name=value argument)\r\n\r\n1. [Add a Cookie](https://catonmat.net/cookbooks/curl/set-cookies#add-cookie)\r\n\r\n   ```shell\r\n   curl -b 'user_id=abc' https://sth.com\r\n   ```\r\n\r\n   \u5728\u4e00\u4e2aget\u8bf7\u6c42\u4e2d\uff0c\u6dfb\u52a0\u4e86\u4e00\u4e2acookie\uff0cCookie: user_id=abc\r\n\r\n2. [Add Two Cookies](https://catonmat.net/cookbooks/curl/set-cookies#add-two-cookies)\r\n\r\n   ```shell\r\n   curl -b 'session=abcdef' -b 'loggedin=true' https://google.com\r\n   ```\r\n\r\n3. [Add an Empty Cookie](https://catonmat.net/cookbooks/curl/set-cookies#add-empty-cookie)\r\n\r\n4. [Save Cookies to a File](https://catonmat.net/cookbooks/curl/set-cookies#save-cookies-to-file)\r\n\r\n5. [Load Cookies from a File](https://catonmat.net/cookbooks/curl/set-cookies#load-cookies-from-file)\r\n\r\n### Add a Referrer (TLDR: Use -e URL argument)\r\n\r\n\u4fe1\u4efb\u6765\u6e90\u8bbe\u7f6e\r\n\r\n### Follow a 3XX Redirect (TLDR: Use -L argument)\r\n\r\n\u91cd\u5b9a\u5411\r\n\r\n### Use the Basic HTTP Authentication (TLDR: Use -u user:pass argument)\r\n\r\n\u57fa\u7840\u7684HTTP\u767b\u5f55\uff0c\u53ef\u4ee5\u4f20\u9012\u7528\u6237\u540d\u548c\u5bc6\u7801\u7684\r\n\r\n```shell\r\ncurl -u 'bob:12345' https://google.com/login\r\n```\r\n\r\n### Print the Response Headers (TLDR: Use -i argument)\r\n\r\n1. [Print the Response Headers and Body (together)](https://catonmat.net/cookbooks/curl/print-response-headers#print-headers-and-response)\r\n\r\n   ```shell\r\n   curl -i https://catonmat.net\r\n   ```\r\n\r\n   \u6ce8\u610f\u8fd9\u91cc\u4e00\u5b9a\u662f\u5c0f\u5199\u7684-i\uff0c\u5927\u5199\u7684\u529f\u80fd\u662f\u4e0d\u4e00\u6837\u7684\u3002", "top": 0, "createdAt": 1719476817, "style": "", "script": "", "head": "", "ogImage": "https://avatars.githubusercontent.com/u/11980041", "createdDate": "2024-06-27", "dateLabelColor": "#bc4c00"}, "P28": {"htmlDir": "docs/post/gei-ba-ma-gou-ji-gong-lve.html", "labels": ["\u804c\u4e1a\u89c4\u5212"], "postTitle": "\u7ed9\u7238\u5988\u8d2d\u673a\u653b\u7565", "postUrl": "post/gei-ba-ma-gou-ji-gong-lve.html", "postSourceUrl": "https://github.com/andy1202go/andy1202go.github.io/issues/28", "commentNum": 0, "wordCount": 259, "description": "\u7535\u6c60\u5bb9\u91cf\u5927\t4000\u6beb\u5b89\u4ee5\u4e0a\uff0c\u80fd\u8fbe\u52305000\u6700\u597d\r\n\u5145\u7535\u5feb\t\u95ea\u5145\uff0c\u95ee\u4e00\u4e0b\u5145\u6ee1\u8981\u591a\u4e45\r\n\u5185\u5b58\u5927\t6\u4e2aG\u4ee5\u4e0a\u6700\u597d\uff0c\u8d8a\u5927\u8d8a\u597d\r\n\u5b58\u50a8\u7a7a\u95f4\u5927\t256\u4e2aG\u4ee5\u4e0a\uff0c\u8d8a\u5927\u8d8a\u597d\r\n\u597d\u770b\t\u770b\u5988\u559c\u6b22\u54ea\u4e2a\u5c31\u884c\uff0c\u624b\u673a\u58f3\u53ef\u4ee5\u770b\u8981\u4e0d\u8981\u9009\r\n\u5c4f\u5e55\u62a4\u773c\t\u95ee\u4e00\u4e0b\u662f\u4ec0\u4e48\u5c4f\u5e55\uff0cLCD\u662f\u6700\u597d\u7684\uff0cOLED\u4e5f\u884c\uff0c\u81ea\u5df1\u73a9\u4e00\u4e0b\uff0c\u4f53\u9a8c\u4e0b\u523a\u773c\u4e0d\r\n\u8f7b\u4fbf\t\u4f53\u9a8c\u4e0b\u624b\u611f\uff0c\u73b0\u5728\u7684\u624b\u673a\u5f88\u591a\u6bd4\u8f83\u91cd\uff0c\u8fbe\u5230200\u514b\u4e86\uff08\u56db\u4e24\uff09\uff0c\u6700\u597d\u8f7b\u4e00\u70b9\uff0c\u957f\u65f6\u95f4\u62ff\u7740\u73a9\u4e0d\u7d2f\u624b\u548c\u624b\u8155\r\n\u552e\u540e\u65b9\u4fbf\t\u63a8\u8350oppo\uff0c\u6709\u5565\u4e0d\u4f1a\u7684\u7535\u8bdd\u6216\u8005\u53bb\u5e97\u91cc\u95ee\u4e0b\r\n\u8d2d\u7269\u65b9\u5f0f\t\u5efa\u8bae\u53bb\u5e97\u91cc\u4f53\u9a8c\u4e0b\uff0c\u95ee\u4e0b\u4e0a\u9762\u8fd9\u51e0\u9879\u5185\u5bb9\uff0c\u5c31\u80fd\u8bc4\u4f30\u597d\u574f\u4e86\u3002", "top": 0, "createdAt": 1719477401, "style": "", "script": "", "head": "", "ogImage": "https://avatars.githubusercontent.com/u/11980041", "createdDate": "2024-06-27", "dateLabelColor": "#bc4c00"}, "P29": {"htmlDir": "docs/post/30-sui-de-zhi-ye-gui-hua- part1.html", "labels": ["\u804c\u4e1a\u89c4\u5212"], "postTitle": "30\u5c81\u7684\u804c\u4e1a\u89c4\u5212 part1", "postUrl": "post/30-sui-de-zhi-ye-gui-hua-%20part1.html", "postSourceUrl": "https://github.com/andy1202go/andy1202go.github.io/issues/29", "commentNum": 0, "wordCount": 3091, "description": "\u8eab\u5904\u7269\u8054\u7f51\u884c\u4e1a+\u4e24\u6b21\u9762\u4e34\u88c1\u5458+\u65e5\u5e38\u5de5\u4f5c\u63d0\u4e0d\u8d77\u5e72\u52b2\uff0c\u4e0d\u7981\u5728\u5934\u8111\u4e2d\u6e38\u8d70\uff1a\r\n\r\n\u662f\u4e0d\u662f\u4e0d\u5e94\u8be5\u8d70\u7a0b\u5e8f\u5458\u9053\u8def\uff1f\r\n\r\n\u8fd9\u7cdf\u7cd5\u7684\u56fd\u5185\u4e92\u8054\u7f51\u73af\u5883\u548c\u4e0d\u8d1f\u8d23\u7684\u5934\u90e8\u4f01\u4e1a\uff0c\u771f\u662f\u5165\u9519\u884c\u4e86\u4e48\uff1f\r\n\r\n\u6211\u5230\u5e95\u9002\u5408\u505a\u4ec0\u4e48\u5de5\u4f5c\uff1f\r\n\r\n\u6211\u559c\u6b22\u505a\u4ec0\u4e48\uff1f\r\n\r\n\u6211\u64c5\u957f\u505a\u4ec0\u4e48\uff1f\r\n\r\n\u6211\u5230\u5e95\u60f3\u8981\u7684\u662f\u4ec0\u4e48\u5462\uff1f\r\n\r\n\u8fd9\u4e9b\u90fd\u6ca1\u6709\u7b54\u6848....\r\n\r\n\u601d\u6765\u60f3\u53bb\uff0c\u4f3c\u4e4e10\u4f59\u5e74\u5e94\u8bd5\u6559\u80b2\u4e0b\u6765\uff0c\u6700\u5408\u9002\u7684\u89e3\u51b3\u7cfb\u7edf\u6027\u95ee\u9898\u7684\u65f6\u5019\uff0c\u8fd8\u662f\u5f97\u542c\u8bfe\uff0c\u4e0d\u5982\u5c31\u6309\u7167\u804c\u4e1a\u89c4\u5212\u7684\u8bfe\u7a0b\uff0c\u6765\u56de\u770b\u4e00\u4e0b\u81ea\u5df1\u7684\u804c\u4e1a\u9009\u62e9\uff0c\u4ee5\u53ca\u672a\u6765\u53ef\u80fd40\u5e74\u7684\u804c\u4e1a\u4e4b\u8def\u3002", "top": 0, "createdAt": 1719561601, "style": "", "script": "", "head": "", "ogImage": "https://avatars.githubusercontent.com/u/11980041", "createdDate": "2024-06-28", "dateLabelColor": "#bc4c00"}, "P30": {"htmlDir": "docs/post/chang-yong-wang-zhan-shou-cang-\uff08-chi-xu-geng-xin-\uff09.html", "labels": ["\u6536\u85cf"], "postTitle": "\u5e38\u7528\u7f51\u7ad9\u6536\u85cf\uff08\u6301\u7eed\u66f4\u65b0\uff09", "postUrl": "post/chang-yong-wang-zhan-shou-cang-%EF%BC%88-chi-xu-geng-xin-%EF%BC%89.html", "postSourceUrl": "https://github.com/andy1202go/andy1202go.github.io/issues/30", "commentNum": 0, "wordCount": 7593, "description": "## \u5f00\u53d1\u5de5\u5177\r\n\r\n### \u5408\u96c6\r\n\r\n[\u5f00\u53d1\u8005\u6b66\u5668\u5e93](https://devtool.tech/)\r\n\r\n[Hutool](https://www.hutool.cn/)\r\n\r\n[Jodd-Java\u5de5\u5177\u5305](https://jodd.org/)\r\n\r\n### \u6b63\u5219\u8868\u8fbe\u5f0f\r\n\r\n[regex101](https://regex101.com/)\r\n\r\n[**Regex Vis**](https://regex-vis.com/)\r\n\r\n[AutoRegex](https://www.autoregex.xyz/)\r\n\r\n### JSON\r\n\r\n[jsont](https://www.jsont.run/)\r\n\r\nutools\r\n\r\n[Jsoncn](https://www.json.cn/)\r\n\r\n### \u65f6\u95f4\u6233\r\n\r\n[\u65f6\u95f4\u6233](https://tool.lu/timestamp/)\r\n\r\n### cron\r\n\r\n[\u5728\u7ebfCron\u8868\u8fbe\u5f0f\u751f\u6210\u5668](https://cron.qqe2.com/)\r\n\r\nutools\r\n\r\n### Git\r\n\r\n[Git Command Explorer](https://gitexplorer.com/)\r\n\r\n[\u5199readme](https://readme.so/)\r\n\r\n[git-flight-rules](https://github.com/k88hudson/git-flight-rules)\r\n\r\n### \u4ee3\u7801\u683c\u5f0f\u5316\r\n\r\n[\u5728\u7ebf\u4ee3\u7801\u683c\u5f0f\u5316](https://tool.oschina.net/codeformat/sql)\r\n\r\n### \u5f00\u53d1\u6587\u6863\r\n\r\n[DocLand-\u8f7b\u677e\u67e5\u627eapi\u6587\u6863](https://docland.io/)\r\n\r\n[QuickRef](https://quickref.me/)\r\n\r\n[Redis](https://redis.io/docs/)\r\n\r\n### \u67b6\u6784\u8bbe\u8ba1\r\n\r\n[\u7a0b\u5e8f\u5458\u7ec3\u7ea7\u653b\u7565\uff1a\u8f6f\u4ef6\u8bbe\u8ba1](https://time.geekbang.org/column/article/9369)\r\n\r\n#### DDD\r\n\r\n[\u9886\u57df\u9a71\u52a8\u8bbe\u8ba1\u5728\u4e92\u8054\u7f51\u4e1a\u52a1\u5f00\u53d1\u4e2d\u7684\u5b9e\u8df5](https://tech.meituan.com/2017/12/22/ddd-in-practice.html)\r\n\r\n[DDD \u7406\u8bba\u79ef\u7d2f](https://www.cnblogs.com/netfocus/category/361987.html)\r\n\r\n[DDD\u5b9e\u8df5\uff1a\u5982\u4f55\u7528DDD\u91cd\u6784\u4e2d\u53f0\u4e1a\u52a1\u6a21\u578b](https://time.geekbang.org/column/article/163032)\r\n\r\n[DDD\u7cfb\u5217\u7b2c\u56db\u8bb2\uff1a\u9886\u57df\u5c42\u8bbe\u8ba1\u89c4\u8303](https://mp.weixin.qq.com/s?__biz=MzAxNDEwNjk5OQ%3D%3D&chksm=8396d75fb4e15e49341b07022780dcb8dca66a0efb7f129d4de86a5ef5d8a890f6e0d2fd6432&idx=1&mid=2650414919&scene=21&sn=0ad1df1a1b0e2488f7faa21008fdbdd0#wechat_redirect)\r\n\r\n### \u5176\u4ed6\r\n\r\n[explainshell](https://explainshell.com/)\r\n\r\n[\u5728\u7ebfIDE-phcode](https://phcode.dev/)\r\n\r\n[spring-initializr](https://start.spring.io/)\r\n\r\n## \u529e\u516c\r\n\r\n### \u7ed8\u56fe\u76f8\u5173\r\n\r\n[PlantUML](https://plantuml.com/zh/)\r\n\r\n[draw.io](https://app.diagrams.net/)\r\n\r\n[*markmap*](https://markmap.js.org/)\r\n\r\n[ProcessOn\u601d\u7ef4\u5bfc\u56fe\u6d41\u7a0b\u56fe](https://www.processon.com/)\r\n\r\n[\u5728\u7ebf\u767d\u677f](https://songlh.top/paint-board/)\r\n\r\n[\u5728\u7ebf\u767d\u677f](https://www.tldraw.com/)\r\n\r\n[Mermaid](https://mermaid.js.org/)\r\n\r\n[SVG Silh](https://svgsilh.com/)\r\n\r\n[\u963f\u91cc\u5df4\u5df4\u77e2\u91cf\u56fe\u6807\u5e93](https://www.iconfont.cn/search/index?searchType=icon&q=icon)\r\n\r\n[Cloudcraft-\u7ed8\u5236\u90e8\u7f72\u67b6\u6784\u56fe](https://www.cloudcraft.co/)\r\n\r\n[Plectica](https://www.plectica.com/)\r\n\r\n[iconbolt](https://www.iconbolt.com/)\r\n\r\n[tablerIcon](https://tabler.io/icons)\r\n\r\n### PPT\r\n\r\n[**SearchTheDeck**](https://searchthedeck.com/)\r\n\r\n[MindShow](https://www.mindshow.fun/#/templates)\r\n\r\n### CV\r\n\r\n[\u4e00\u7eb8\u7b80\u5386](https://cv.devtool.tech/)\r\n\r\n[\u6728\u53ca\u7b80\u5386](https://www.mujicv.com/index.html)\r\n\r\n[OpenResume](https://www.open-resume.com/)\r\n\r\n[PPResume-\u57fa\u4e8eLatex](https://ppresume.com/)\r\n\r\n[\u7b80\u5355\u7b80\u5386](https://easycv.cn/)\r\n\r\n[LapisCV-\u57fa\u4e8eMarkdown](https://github.com/BingyanStudio/LapisCV)\r\n\r\n[\u4f18\u96c5\u7b80\u5386](https://www.elegantresume.pro/)\r\n\r\n[Faultier-CV](https://i5heu.github.io/Faultier-CV/dist/index.html)\r\n\r\n### \u5176\u4ed6\r\n\r\n[\u5f55\u5c4f\u622a\u56fe\u8f6f\u4ef6](https://www.screentogif.com/)\r\n\r\n[salaryfly](https://salaryfly.com/)\r\n\r\n[\u5199\u4f5c\u732b](https://xiezuocat.com/#/)\r\n[\u5b9a\u79ef\u5206\u8ba1\u7b97log(x+1)](https://zh.numberempire.com/definiteintegralcalculator.php)\r\n\r\n[\u6570\u5b66\u516c\u5f0f\u7ed8\u56fe](https://www.desmos.com/calculator/nagoahpcmu?lang=zh-CN)\r\n\r\n## \u5f00\u6e90\u8f6f\u4ef6/\u8d44\u6e90\r\n\r\n### \u8f6f\u4ef6\u6216\u6846\u67b6\r\n\r\n[MEGAEASE-\u4e91\u90e8\u7f72\u5e73\u53f0](https://megaease.com/zh/)\r\n\r\n[\u521b\u4e1a\u7075\u611f\u6536\u96c6-\u6765\u6e90\u4e8e\u962e\u4e00\u5cf0](https://github.com/zhaoolee/ins)\r\n\r\n[Solon **Java \u201c\u7eaf\u8840\u56fd\u4ea7\u201d\u5e94\u7528\u5f00\u53d1\u6846\u67b6\uff1a\u66f4\u5feb\u3001\u66f4\u5c0f\u3001\u66f4\u7b80\u5355\u3002", "top": 0, "createdAt": 1719902924, "style": "", "script": "", "head": "", "ogImage": "https://avatars.githubusercontent.com/u/11980041", "createdDate": "2024-07-02", "dateLabelColor": "#bc4c00"}, "P31": {"htmlDir": "docs/post/30-sui-de-zhi-ye-gui-hua- Part2.html", "labels": ["\u804c\u4e1a\u89c4\u5212"], "postTitle": "30\u5c81\u7684\u804c\u4e1a\u89c4\u5212 Part2", "postUrl": "post/30-sui-de-zhi-ye-gui-hua-%20Part2.html", "postSourceUrl": "https://github.com/andy1202go/andy1202go.github.io/issues/31", "commentNum": 0, "wordCount": 4659, "description": "## 2 \u804c\u4e1a\u4e4b\u601d\r\n\r\n### 2.0 \u4e2a\u4eba\u771f\u5b9e\u60c5\u51b5\u5206\u6790\r\n\r\n1. \u5f53\u524d\u5de5\u4f5c\u60c5\u51b5\r\n\r\n   \u5e94\u8be5\u662f\u80fd\u505a\u4e5f\u9002\u5408\u505a\u7684\uff0c\u4f46\u662f\u6ca1\u90a3\u4e48\u60f3\u505a\u7684\u5de5\u4f5c\u3002", "top": 0, "createdAt": 1720165565, "style": "", "script": "", "head": "", "ogImage": "https://avatars.githubusercontent.com/u/11980041", "createdDate": "2024-07-05", "dateLabelColor": "#bc4c00"}, "P32": {"htmlDir": "docs/post/Let's play a game.html", "labels": ["\u804c\u4e1a\u89c4\u5212"], "postTitle": "Let's play a game", "postUrl": "post/Let%27s%20play%20a%20game.html", "postSourceUrl": "https://github.com/andy1202go/andy1202go.github.io/issues/32", "commentNum": 0, "wordCount": 711, "description": "\u6309\u7167\u524d\u9762\u804c\u4e1a\u89c4\u683c\u7684\u60c5\u51b5\uff0c35w\u5e74\u6536\u5165\u662f\u80fd\u63a5\u53d7\u7684\u3002", "top": 1, "createdAt": 1720682005, "style": "", "script": "<script>MathJax = {tex: {inlineMath: [[\"$\", \"$\"]]}};</script><script async src=\"https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js\"></script>", "head": "", "ogImage": "https://avatars.githubusercontent.com/u/11980041", "createdDate": "2024-07-11", "dateLabelColor": "#bc4c00"}, "P33": {"htmlDir": "docs/post/shi-yong-CattToolkit-jia-su-Github.html", "labels": ["\u5c0f\u73a9\u610f"], "postTitle": "\u4f7f\u7528CattToolkit\u52a0\u901fGithub", "postUrl": "post/shi-yong-CattToolkit-jia-su-Github.html", "postSourceUrl": "https://github.com/andy1202go/andy1202go.github.io/issues/33", "commentNum": 0, "wordCount": 288, "description": "\u76f4\u63a5\u5728\u641c\u7d22\u5f15\u64ce\u641c\u7d22CattToolkit\u5373\u53ef\uff0c\u5404\u4e2a\u5e73\u53f0\u90fd\u6709\u7684\u4e0b\u8f7d\uff0c\u4e0b\u8f7d\u6e20\u9053\u4e5f\u6709\u591a\u4e2a\uff0c\u4e2a\u4eba\u4f7f\u7528\u7684\u662f\u767e\u5ea6\u7f51\u76d8\u3002", "top": 0, "createdAt": 1720871384, "style": "", "script": "", "head": "", "ogImage": "https://avatars.githubusercontent.com/u/11980041", "createdDate": "2024-07-13", "dateLabelColor": "#bc4c00"}}, "singeListJson": {}, "labelColorDict": {"\u5b66\u4e60\u603b\u7ed3": "#0075ca", "\u5c0f\u73a9\u610f": "#fbca04", "\u5de5\u4f5c\u603b\u7ed3": "#0052cc", "\u6536\u85cf": "#91CC4E", "\u6e90\u7801\u5b66\u4e60": "#5319e7", "\u804c\u4e1a\u89c4\u5212": "#0052cc", "\u8bfe\u7a0b": "#87DA81", "\u8def\u5f84": "#bfdadc"}, "displayTitle": "Andy's Blog", "faviconUrl": "https://avatars.githubusercontent.com/u/11980041", "ogImage": "https://avatars.githubusercontent.com/u/11980041", "primerCSS": "<link href='https://mirrors.sustech.edu.cn/cdnjs/ajax/libs/Primer/21.0.7/primer.css' rel='stylesheet' />", "homeUrl": "https://andy1202go.github.io", "prevUrl": "/page2.html", "nextUrl": "disabled"}